# config/services.yaml
parameters:
    activities_image_directory: '%kernel.project_dir%/public/uploads/activities'
    uploads_directory: '%kernel.project_dir%/public/uploads/images/users'
    # chemin public utilisable dans asset() pour afficher l'image
    uploads_public_path: '/uploads'
    images_directory: '%kernel.project_dir%/public/uploads/images'
    users_images_directory: '%kernel.project_dir%/public/uploads/images/users'
    events_images_directory: '%kernel.project_dir%/public/uploads/events'
    teams_images_directory: '%kernel.project_dir%/public/uploads/teams'
    RECAPTCHA_SITE_KEY: '%env(RECAPTCHA_SITE_KEY)%'
    stripe_secret_key: 'sk_test_51R6XfmCvMipSUHQuaVylRxEIETrWqy4OtYXPBegkEIcFhkUUkByDt8EixxdDNh1ekcHSdVAUGNRr7BUsfXFEc5VX00CqsNejm0'
    stripe_public_key: 'pk_test_51R6XfmCvMipSUHQuBPuvGSEoyT4USxinzYkBENoYz4C2LSYzsB46fd6CgJaXzAtDOUP7prhW651vB3CP6CM9PgvL009edX6abt'
    deepinfra_api_key: '%env(DEEPINFRA_API_KEY)%'
    
    # IBM Watson Speech to Text configuration
    ibm_watson_api_key: 'JR-LCWjnds3scsjrtCtn2wCNlyR2GWGAQq_hJ1D6Fhh-'
    ibm_watson_service_url: 'https://api.au-syd.speech-to-text.watson.cloud.ibm.com/instances/760398a7-3622-4319-83f8-415080a4ee25'
    
    # Ably API Key
    ably_api_key: 'WWlNRQ.NtFTkw:nUpGoNHsYuuGPEGaiG7MFXg-VnDJCA-huFa182u2_0c'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\Controller\AdminReclamationController:
        arguments:
            $logger: '@monolog.logger'

    App\Service\TranslationService:
        arguments:
            $logger: '@monolog.logger'

    App\Service\EmailUniquenessValidator:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    App\Security\ClientRegistry: ~

    App\Service\EmailService:
        arguments:
            $mailer: '@mailer'
            
    App\Service\SpeechToTextService:
        arguments:
            $apiKey: '%ibm_watson_api_key%'
            $serviceUrl: '%ibm_watson_service_url%'
            
    App\Service\PerspectiveApiService:
        public: true
        
    App\Service\EmailJSService:
        public: true
        
    App\Service\AblyService:
        arguments:
            $apiKey: '%ably_api_key%'
            
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Service\StripeService:
        arguments:
            $stripeSecretKey: '%stripe_secret_key%'
