security:
    # Configure les hashers de mot de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Configure les providers de l'utilisateur
    providers:
        users_in_memory:
            memory: null

    # Définition des firewalls
    firewalls:
        dev:
            pattern: ^/
            security: false
        main:
            lazy: true
            provider: users_in_memory
            form_login:
                login_path: app_login
                check_path: app_login
                username_parameter: email      # Utilise "email" au lieu de "_username"
                password_parameter: password  # Utilise "password"
                default_target_path: app_home
            logout:
                path: app_logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Contrôle d'accès pour certaines routes
    access_control:
        - { path: ^/dashboard_admin, roles: ROLE_ADMIN }
        - { path: ^/dashboard_entraineur, roles: ROLE_ENTRAINEUR }
        - { path: ^/dashboard_responsable_salle, roles: ROLE_RESPONSABLE_SALLE }
        - { path: ^/home, roles: ROLE_SPORTIF }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            # Par défaut, les hashers de mot de passe sont coûteux en ressources et prennent du temps. Cela
            # est important pour générer des hashs de mots de passe sécurisés. Cependant, dans les tests,
            # les hashs sécurisés ne sont pas importants, cela gaspille des ressources et augmente les temps de tests.
            # La configuration suivante réduit le facteur de travail aux valeurs les plus basses possibles.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Valeur la plus basse pour bcrypt
                time_cost: 3 # Valeur la plus basse pour argon
                memory_cost: 10 # Valeur la plus basse pour argon
