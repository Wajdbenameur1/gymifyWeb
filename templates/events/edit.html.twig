<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Edit Event</title>
        <link rel="stylesheet" href="/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==" crossorigin="anonymous" referrerpolicy="no-referrer"/>
        <link rel="stylesheet" href="/css/fonts.min.css">
        <link rel="stylesheet" href="/css/kaiadmin.min.css">
        <link rel="icon" href="/img/favicon.ico" type="image/x-icon">
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
        <style>
            .form-control:focus {
                box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
            }
            .image-preview-container {
                min-height: 200px;
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .image-preview {
                max-height: 200px;
                object-fit: contain;
                border-radius: 8px;
            }
            .is-invalid {
                border: 1px solid #dc3545 !important;
            }
            .invalid-feedback {
                color: #dc3545;
                font-size: 0.875em;
            }
            .border-dashed {
                border: 2px dashed #dee2e6;
            }
            .image-upload-container:hover .border-dashed {
                border-color: #3a7bd5;
            }
            .border-danger {
                border-color: #dc3545 !important;
            }
            .btn-outline-primary {
                transition: all 0.3s ease;
            }
            .btn-outline-primary:hover {
                background-color: #007bff;
                color: white;
            }
            #map {
                width: 100%;
                height: 400px;
                margin-top: 15px;
                border-radius: 8px;
                border: 1px solid #dee2e6;
                z-index: 1;
            }
            .leaflet-container {
                height: 100%;
                width: 100%;
            }
            #submitBtn:disabled {
                opacity: 0.7;
                cursor: not-allowed;
            }
            #charCount {
                font-weight: bold;
                color: #3a7bd5;
            }
            .text-danger {
                color: #dc3545 !important;
            }
            .input-group-text {
                min-width: 45px;
                justify-content: center;
            }
            .footer {
                position: relative;
                bottom: 0;
                width: 100%;
                font-size: 0.9rem;
            }
        </style>
        <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
        <script>
            WebFont.load({
                google: { families: ["Public Sans:300,400,500,600,700"] },
                custom: { families: ["Font Awesome 5 Solid", "Font Awesome 5 Regular", "Font Awesome 5 Brands", "simple-line-icons"], urls: ["/css/fonts.min.css"] },
                active: function() { sessionStorage.fonts = true; }
            });
        </script>
    </head>
    <body>
        <div class="wrapper">
            <!-- Sidebar reste inchangé -->
            <div class="sidebar" data-background-color="dark">
                <div class="sidebar-logo">
                    <div class="logo-header" data-background-color="dark">
                        <a href="/responsable/home" class="logo">
                            <img src="/img/kaiadmin/logo_light.svg" alt="Logo" class="navbar-brand" height="20">
                        </a>
                        <div class="nav-toggle">
                            <button class="btn btn-toggle toggle-sidebar"><i class="gg-menu-right"></i></button>
                            <button class="btn btn-toggle sidenav-toggler"><i class="gg-menu-left"></i></button>
                        </div>
                        <button class="topbar-toggler more"><i class="gg-more-vertical-alt"></i></button>
                    </div>
                </div>
                <div class="sidebar-wrapper scrollbar scrollbar-inner">
                    <div class="sidebar-content">
                        <ul class="nav nav-secondary">
                            <li class="nav-item"><a href="/responsable/dashboard"><i class="fas fa-home"></i><p>Dashboard</p></a></li>
                            <li class="nav-item"><a href="/events"><i class="fas fa-calendar-alt"></i><p>Events</p></a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="main-panel">
                <div class="main-header">
                    <!-- Header reste inchangé -->
                </div>
                <div class="container">
                    <div class="page-inner">
                        <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row pt-2 pb-4">
                            <div>
                                <h3 class="fw-bold mb-3">Edit Event</h3>
                                <h6 class="op-7 mb-2">Edit an Existing Event</h6>
                            </div>
                        </div>
                        <div class="row justify-content-center">
                            <div class="col-lg-10">
                                <div class="card shadow-sm">
                                    <div class="card-body p-4">
                                        <form method="post" action="{{ path('app_events_edit', {'id': event.id}) }}" enctype="multipart/form-data" class="needs-validation" novalidate id="eventForm">
                                            <div class="mb-3">
                                                <label for="events_nom" class="form-label fw-bold text-muted small">Event Name</label>
                                                <div class="input-group">
                                                    <span class="input-group-text bg-light"><i class="fas fa-heading text-primary"></i></span>
                                                    <input type="text" id="events_nom" name="events[nom]" maxlength="255" class="form-control" placeholder="Enter event name" required="required"/>
                                                </div>
                                                <div class="invalid-feedback">Please enter an event name (max 255 characters).</div>
                                            </div>
                                            <div class="mb-3 image-upload-container">
                                                <label for="imageInput" class="form-label fw-bold text-muted small">Event Image</label>
                                                <div class="image-preview-container text-center mb-3 position-relative">
                                                    <img id="imagePreview" src="" class="image-preview shadow-sm mx-auto d-block" style="display: none;">
                                                    <div id="placeholderText" class="position-absolute top-50 start-50 translate-middle w-100 py-5 border-2 border-dashed rounded-3 bg-light" style="display: block;">
                                                        <i class="fas fa-camera fa-3x text-muted mb-3 d-block"></i>
                                                        <p class="text-muted mb-0">No image selected</p>
                                                    </div>
                                                </div>
                                                <div class="d-flex gap-3">
                                                    <div class="flex-grow-1">
                                                        <input type="file" id="imageInput" name="events[imageFile]" class="form-control d-none" accept="image/*"/>
                                                        <label for="imageInput" class="btn btn-outline-primary w-100 py-2"><i class="fas fa-camera me-2"></i>Choose Image</label>
                                                    </div>
                                                    <button type="button" id="removeImageBtn" class="btn btn-outline-danger py-2" style="display: none;"><i class="fas fa-trash-alt me-2"></i>Remove</button>
                                                </div>
                                                <div class="invalid-feedback">Please select a valid image (JPG, PNG, WEBP, max 2MB).</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="events_date" class="form-label fw-bold text-muted small">Date</label>
                                                <div class="input-group">
                                                    <span class="input-group-text bg-light"><i class="far fa-calendar-alt text-primary"></i></span>
                                                    <input type="date" id="events_date" name="events[date]" class="form-control" required="required"/>
                                                </div>
                                                <div class="invalid-feedback">Please select a valid date.</div>
                                            </div>
                                            <div class="row mb-3">
                                                <div class="col-md-6">
                                                    <label for="events_heure_debut" class="form-label fw-bold text-muted small">Start Time</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text bg-light"><i class="far fa-clock text-primary"></i></span>
                                                        <input type="time" id="events_heure_debut" name="events[heure_debut]" class="form-control" required="required"/>
                                                    </div>
                                                    <div class="invalid-feedback">Please select a valid start time.</div>
                                                </div>
                                                <div class="col-md-6">
                                                    <label for="events_heure_fin" class="form-label fw-bold text-muted small">End Time</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text bg-light"><i class="far fa-clock text-primary"></i></span>
                                                        <input type="time" id="events_heure_fin" name="events[heure_fin]" class="form-control" required="required"/>
                                                    </div>
                                                    <div class="invalid-feedback">End time must be after start time.</div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="events_type" class="form-label fw-bold text-muted small">Event Type</label>
                                                <div class="input-group">
                                                    <span class="input-group-text bg-light"><i class="fas fa-list text-primary"></i></span>
                                                    <select id="events_type" name="events[type]" class="form-control" required="required">
                                                        <option value="COMPETITION">COMPETITION</option>
                                                        <option value="ENTRAINEMENT">ENTRAINEMENT</option>
                                                        <option value="RANDONNEE">RANDONNEE</option>
                                                    </select>
                                                </div>
                                                <div class="invalid-feedback">Please select an event type.</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="events_reward" class="form-label fw-bold text-muted small">Reward</label>
                                                <div class="input-group">
                                                    <span class="input-group-text bg-light"><i class="fas fa-trophy text-primary"></i></span>
                                                    <select id="events_reward" name="events[reward]" class="form-control" required="required">
                                                        <option value="MEDAILLE">MEDAILLE</option>
                                                        <option value="CERTIFICAT">CERTIFICAT</option>
                                                        <option value="TROPHÉE">TROPHÉE</option>
                                                    </select>
                                                </div>
                                                <div class="invalid-feedback">Please select a reward.</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="events_description" class="form-label fw-bold text-muted small">Description</label>
                                                <textarea id="events_description" name="events[description]" class="form-control" rows="4" placeholder="Describe the event..." required="required"></textarea>
                                                <div class="invalid-feedback">Please provide a description (10-500 characters).</div>
                                                <div class="form-text text-end"><span id="charCount">0</span>/500 characters</div>
                                            </div>
                                            <div class="mb-3">
                                                <label for="events_lieu" class="form-label fw-bold text-muted small">Location</label>
                                                <div class="input-group">
                                                    <span class="input-group-text bg-light"><i class="fas fa-map-marker-alt text-primary"></i></span>
                                                    <input type="text" id="events_lieu" name="events[lieu]" maxlength="255" class="form-control" placeholder="Enter location (e.g., Tunis, Tunisia)" required="required"/>
                                                    <button type="button" id="searchLocationBtn" class="btn btn-outline-primary"><i class="fas fa-search me-2"></i>Search</button>
                                                </div>
                                                <div class="invalid-feedback">Please enter a location or select one on the map.</div>
                                                <div id="map"></div>
                                                <input type="hidden" id="events_latitude" name="events[latitude]"/>
                                                <input type="hidden" id="events_longitude" name="events[longitude]"/>
                                            </div>
                                            {{ form_row(form._token) }}
                                            <div class="d-flex justify-content-end gap-3">
                                                <button type="button" id="cancelBtn" class="btn btn-outline-secondary"><i class="fas fa-arrow-left me-2"></i>Cancel</button>
                                                <button type="submit" id="submitBtn" class="btn btn-primary"><i class="fas fa-save me-2"></i>Save</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <footer class="footer py-3 bg-light border-top">
                    <div class="container-fluid d-flex flex-column flex-md-row justify-content-between align-items-center">
                        <nav class="mb-2 mb-md-0">
                            <ul class="nav">
                                <li class="nav-item"><a class="nav-link text-muted" href="/responsable/about">À propos</a></li>
                                <li class="nav-item"><a class="nav-link text-muted" href="/responsable/help">Aide</a></li>
                                <li class="nav-item"><a class="nav-link text-muted" href="/responsable/terms">Conditions d'utilisation</a></li>
                            </ul>
                        </nav>
                        <div class="text-center text-muted mb-2 mb-md-0">
                            © 2025, fait avec <i class="fa fa-heart heart text-danger"></i> par
                            <a href="/responsable/home" class="text-muted text-decoration-none">Votre Société</a>
                        </div>
                        <div class="text-muted">
                            Template par <a href="https://themewagon.com/" target="_blank" class="text-muted text-decoration-none">ThemeWagon</a>
                        </div>
                    </div>
                </footer>
            </div>
        </div>
        <script src="/js/core/jquery-3.7.1.min.js"></script>
        <script src="/js/core/popper.min.js"></script>
        <script src="/js/core/bootstrap.min.js"></script>
        <script src="/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
        <script src="/js/plugin/chart.js/chart.min.js"></script>
        <script src="/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>
        <script src="/js/plugin/chart-circle/circles.min.js"></script>
        <script src="/js/plugin/datatables/datatables.min.js"></script>
        <script src="/js/plugin/bootstrap-notify/bootstrap-notify.min.js"></script>
        <script src="/js/plugin/jsvectormap/jsvectormap.min.js"></script>
        <script src="/js/plugin/jsvectormap/world.js"></script>
        <script src="/js/plugin/sweetalert/sweetalert.min.js"></script>
        <script src="/js/kaiadmin.min.js"></script>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                const eventId = window.location.pathname.split('/')[2];
                const form = document.getElementById('eventForm');

                // Fetch event data
                fetch(`/events/${eventId}/edit`, {
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    document.getElementById('events_nom').value = data.nom || '';
                    document.getElementById('events_date').value = data.date || '';
                    document.getElementById('events_heure_debut').value = data.heure_debut || '';
                    document.getElementById('events_heure_fin').value = data.heure_fin || '';
                    document.getElementById('events_type').value = data.type || 'COMPETITION';
                    document.getElementById('events_reward').value = data.reward || 'MEDAILLE';
                    document.getElementById('events_description').value = data.description || '';
                    document.getElementById('events_lieu').value = data.lieu || '';
                    document.getElementById('events_latitude').value = data.latitude || '';
                    document.getElementById('events_longitude').value = data.longitude || '';

                    const charCount = document.getElementById('charCount');
                    charCount.textContent = data.description ? data.description.length : 0;

                    const imagePreview = document.getElementById('imagePreview');
                    const placeholderText = document.getElementById('placeholderText');
                    const removeImageBtn = document.getElementById('removeImageBtn');
                    if (data.imageFile) {
                        imagePreview.src = data.imageFile;
                        imagePreview.style.display = 'block';
                        placeholderText.style.display = 'none';
                        removeImageBtn.style.display = 'block';
                    }

                    // Initialize map with event coordinates
                    const lat = parseFloat(data.latitude) || 36.8065;
                    const lon = parseFloat(data.longitude) || 10.1815;
                    const map = L.map('map').setView([lat, lon], 13);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                    }).addTo(map);
                    let marker = L.marker([lat, lon]).addTo(map)
                        .bindPopup(data.lieu || 'Default Location: Tunis').openPopup();

                    // Map click event
                    map.on('click', function(e) {
                        const { lat, lng } = e.latlng;
                        fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`, {
                            headers: { 'User-Agent': 'EventApp/1.0' }
                        })
                        .then(response => response.json())
                        .then(data => {
                            const address = data.display_name || 'Selected Location';
                            marker.setLatLng([lat, lng]).bindPopup(address).openPopup();
                            document.getElementById('events_lieu').value = address;
                            document.getElementById('events_latitude').value = lat;
                            document.getElementById('events_longitude').value = lng;
                            clearError(document.getElementById('events_lieu'));
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            showError(document.getElementById('events_lieu'), 'Error fetching location details.');
                        });
                    });

                    // Search location
                    document.getElementById('searchLocationBtn').addEventListener('click', function() {
                        const address = document.getElementById('events_lieu').value.trim();
                        if (!address) {
                            showError(document.getElementById('events_lieu'), 'Please enter a location.');
                            return;
                        }
                        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&limit=1`, {
                            headers: { 'User-Agent': 'EventApp/1.0' }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data && data.length > 0) {
                                const lat = parseFloat(data[0].lat);
                                const lon = parseFloat(data[0].lon);
                                map.setView([lat, lon], 15);
                                marker.setLatLng([lat, lon]).bindPopup(address).openPopup();
                                document.getElementById('events_latitude').value = lat;
                                document.getElementById('events_longitude').value = lon;
                                clearError(document.getElementById('events_lieu'));
                            } else {
                                showError(document.getElementById('events_lieu'), 'Location not found.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            showError(document.getElementById('events_lieu'), 'Error fetching location.');
                        });
                    });
                })
                .catch(error => {
                    console.error('Error fetching event data:', error);
                    alert('Failed to load event data. Please try again.');
                });

                // Form handling
                const imageInput = document.getElementById('imageInput');
                const imagePreview = document.getElementById('imagePreview');
                const placeholderText = document.getElementById('placeholderText');
                const removeImageBtn = document.getElementById('removeImageBtn');
                const cancelBtn = document.getElementById('cancelBtn');
                const submitBtn = document.getElementById('submitBtn');
                const descriptionTextarea = document.getElementById('events_description');
                const charCount = document.getElementById('charCount');

                function showError(input, message) {
                    let formGroup = input.closest('.mb-3') || input.closest('.image-upload-container');
                    let errorElement = formGroup.querySelector('.invalid-feedback');
                    if (!errorElement) {
                        errorElement = document.createElement('div');
                        errorElement.className = 'invalid-feedback d-block';
                        formGroup.appendChild(errorElement);
                    }
                    errorElement.textContent = message;
                    input.classList.add('is-invalid');
                    if (input === imageInput) {
                        placeholderText.classList.add('border-danger');
                        placeholderText.innerHTML = '<i class="fas fa-exclamation-circle fa-3x text-danger mb-3 d-block"></i><p class="text-danger">' + message + '</p>';
                    }
                }

                function clearError(input) {
                    let formGroup = input.closest('.mb-3') || input.closest('.image-upload-container');
                    const errorElement = formGroup.querySelector('.invalid-feedback');
                    if (errorElement) errorElement.remove();
                    input.classList.remove('is-invalid');
                    if (input === imageInput && !imageInput.files.length && !imagePreview.src) {
                        placeholderText.classList.remove('border-danger');
                        placeholderText.innerHTML = '<i class="fas fa-camera fa-3x text-muted mb-3 d-block"></i><p class="text-muted">No image selected</p>';
                    }
                }

                function validateField(input) {
                    if (input === imageInput) {
                        if (imageInput.files.length) {
                            const file = imageInput.files[0];
                            const validTypes = ['image/jpeg', 'image/png', 'image/webp'];
                            const maxSize = 2 * 1024 * 1024;
                            if (!validTypes.includes(file.type)) {
                                showError(input, 'Invalid file type. Use JPG, PNG, or WEBP.');
                                return false;
                            }
                            if (file.size > maxSize) {
                                showError(input, 'File too large. Maximum 2MB.');
                                return false;
                            }
                        }
                        if (!imageInput.files.length && !imagePreview.src) {
                            showError(input, 'Please select an image.');
                            return false;
                        }
                    } else if (input.hasAttribute('required') && !input.value.trim()) {
                        showError(input, 'This field is required.');
                        return false;
                    } else if (input === descriptionTextarea) {
                        const length = input.value.length;
                        if (length < 10 || length > 500) {
                            showError(input, 'Description must be 10-500 characters.');
                            return false;
                        }
                    }
                    clearError(input);
                    return true;
                }

                imageInput.addEventListener('change', function() {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            imagePreview.src = e.target.result;
                            imagePreview.style.display = 'block';
                            placeholderText.style.display = 'none';
                            removeImageBtn.style.display = 'block';
                            clearError(imageInput);
                        };
                        reader.readAsDataURL(file);
                    }
                });

                removeImageBtn.addEventListener('click', function() {
                    imageInput.value = '';
                    imagePreview.src = '';
                    imagePreview.style.display = 'none';
                    placeholderText.style.display = 'block';
                    this.style.display = 'none';
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'remove_image';
                    input.value = '1';
                    form.appendChild(input);
                });

                descriptionTextarea.addEventListener('input', function() {
                    charCount.textContent = this.value.length;
                    if (this.value.length > 500 || this.value.length < 10) {
                        this.classList.add('is-invalid');
                        charCount.classList.add('text-danger');
                    } else {
                        this.classList.remove('is-invalid');
                        charCount.classList.remove('text-danger');
                    }
                });

                form.addEventListener('submit', function(e) {
                    form.classList.add('was-validated');
                    let isValid = true;
                    const requiredFields = [form.querySelector('[name="events[nom]"]'), imageInput, form.querySelector('[name="events[date]"]'),
                        form.querySelector('[name="events[heure_debut]"]'), form.querySelector('[name="events[heure_fin]"]'),
                        form.querySelector('[name="events[type]"]'), form.querySelector('[name="events[reward]"]'),
                        form.querySelector('[name="events[description]"]'), form.querySelector('[name="events[lieu]"]')];

                    requiredFields.forEach(field => {
                        if (!validateField(field)) isValid = false;
                    });

                    const latitudeInput = document.getElementById('events_latitude');
                    const longitudeInput = document.getElementById('events_longitude');
                    if (!latitudeInput.value || !longitudeInput.value) {
                        showError(document.getElementById('events_lieu'), 'Please set location coordinates.');
                        isValid = false;
                    }

                    const startTime = new Date(`${form.querySelector('[name="events[date]"]').value}T${form.querySelector('[name="events[heure_debut]"]').value}`);
                    const endTime = new Date(`${form.querySelector('[name="events[date]"]').value}T${form.querySelector('[name="events[heure_fin]"]').value}`);
                    if (endTime <= startTime) {
                        showError(form.querySelector('[name="events[heure_fin]"]'), 'End time must be after start time.');
                        isValid = false;
                    }

                    if (!isValid) {
                        e.preventDefault();
                        e.stopPropagation();
                        const firstInvalid = form.querySelector('.is-invalid');
                        if (firstInvalid) firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    } else {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Saving...';
                    }
                });

                cancelBtn.addEventListener('click', function() {
                    window.location.href = '/events';
                });
            });
        </script>
    </body>
</html>