<!DOCTYPE html>
<html lang="{{ app.request.locale }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}KaiAdmin - Symfony{% endblock %}</title>
    
    {% block stylesheets %}
    

        <link rel="stylesheet" href="{{ asset('css/bootstrap.min.css') }}">
        <link rel="stylesheet" href="{{ asset('css/style.css') }}">
        <link rel="stylesheet" href="{{ asset('css/fonts.min.css') }}">
        <link rel="stylesheet" href="{{ asset('css/demo.css') }}">
        <link rel="stylesheet" href="{{ asset('css/demo.css.map') }}">
        <link rel="stylesheet" href="{{ asset('css/kaiadmin.css.map') }}">
        <link rel="stylesheet" href="{{ asset('css/fonts.css') }}">
        <link rel="stylesheet" href="{{ asset('css/kaiadmin.css') }}">
        <link rel="stylesheet" href="{{ asset('css/kaiadmin.min.css') }}">
        <link rel="stylesheet" href="{{ asset('css/plugins.css') }}">
        <link rel="stylesheet" href="{{ asset('css/plugins.min.css') }}">
        <link rel="stylesheet" href="{{ asset('css/plugins.css.map') }}">
        <link rel="stylesheet" href="{{ asset('css/post-style.css') }}">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

      

    {% endblock %}
    
    {% block javascripts_head %}
        <script src="{{ asset('js/webfont.min.js') }}"></script>
        <script>
          WebFont.load({
            google: { families: ["Public Sans:300,400,500,600,700"] },
            custom: {
              families: [
                "Font Awesome 5 Solid",
                "Font Awesome 5 Regular",
                "Font Awesome 5 Brands",
                "simple-line-icons",
              ],
              urls: ["{{ asset('css/fonts.min.css') }}"]
            },
            active: function() {
              sessionStorage.fonts = true;
            }
          });
        </script>
    {% endblock %}
</head>
<body>
  <div class="wrapper d-flex">  {# bootstrap flex-container #}
        {% include 'sportifdashboard/sidebar.html.twig' %}
        
        <div class="main-panel flex-grow-1">
           {# on peut garder container-fluid ou container selon l‚Äôeffet d√©sir√© #}
            
            
           <div class="container-fluid">
                <div class="page-inner">
                    {% block body %}{% endblock %}
                </div>
            </div>

            
            {% include 'sportifdashboard/footer.html.twig' %}
        </div>
    </div>

    {% include 'admin/scripts.html.twig' %}
    
    {% block javascripts %}
        <script src="{{ asset('js/script.js') }}"></script>



        <script>
          // 1) On log pour s'assurer que notre script est bien charg√©
          console.log('üí¨ Comment AJAX script loaded');
        
          // 2) Event delegation : on capte TOUTES les soumissions de form sur <body>
          document.body.addEventListener('submit', async function(e) {
            // Si ce n'est pas un form de commentaire, on quitte
            if (!e.target.classList.contains('js-add-comment-form')) {
              return;
            }
        
            e.preventDefault();  // Stoppe absolument la soumission classique
            const form   = e.target;
            const postId = form.dataset.postId;
            console.log('üìù Submitting comment form for post', postId);
        
            const formData = new FormData(form);
        
            try {
              const response = await fetch(form.action, {
                method: 'POST',
                credentials: 'same-origin',              // ‚Üê envoie bien les cookies de session/CSRF
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                body: formData
              });
        
              console.log('Fetch response status:', response.status);
        
              let data = null;
              // on essaie de parser m√™me si le content-type n'est pas strictement JSON
              try { data = await response.json(); } catch(_){}
        
              if (!response.ok) {
                console.error('‚ùå Comment API Error:', data);
                const msg = data?.errors?.join("\n") || `Erreur ${response.status}`;
                alert(msg);
                return;
              }
        
              // 3) Tout est OK : on ins√®re le nouveau commentaire dans la liste
              const html = `
                <div class="d-flex align-items-start mb-3">
                  <img src="${data.user.avatar}" 
                       class="rounded-circle me-2" 
                       style="width:32px;height:32px;object-fit:cover;">
                  <div class="w-100">
                    <strong>${data.user.nom}</strong>
                    <p class="mb-1">${data.content}</p>
                    <small class="text-muted">${data.createdAt}</small>
                  </div>
                </div>
              `;
              const commentsContainer = form.closest('.modal-content')
                                            .querySelector('.flex-grow-1');
              commentsContainer.insertAdjacentHTML('afterbegin', html);
        
              form.reset();
        
              // 4) On met √† jour le compteur sur le bouton du modal
              const btn = document.querySelector(`[data-bs-target="#commentsModal${postId}"]`);
              if (btn) {
                let count = parseInt(btn.innerText) + 1;
                btn.innerText = count + ' Commentaire' + (count>1?'s':'');
              }
        
            } catch (err) {
              console.error('üö® Unexpected fetch error:', err);
              alert("Erreur lors de l'envoi du commentaire.");
            }
          });
        </script>
          

    {% endblock %}



  
      


</body>

</html>
