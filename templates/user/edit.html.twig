{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}{{ page_title }}{% endblock %}

{% block body %}
    <div class="container-fluid px-4">
        {# Header Section #}
        <div class="d-flex align-items-center justify-content-between mb-4">
            <div>
                <h1 class="fw-bold mb-2">{{ page_title }}</h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="{{ path('app_admin') }}">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="{{ path('user_index') }}">Users</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Edit</li>
                    </ol>
                </nav>
            </div>
        </div>

        {# Flash Messages #}
        {% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ label }}">
            {{ message }}
        </div>
    {% endfor %}
{% endfor %}
        {# Main Form Card #}
        <div class="card border-0 shadow-sm rounded-3 overflow-hidden">
            <div class="card-header bg-primary text-white py-3">
                <h5 class="mb-0"><i class="fas fa-user-edit me-2"></i> User Information</h5>
            </div>
            
            <div class="card-body p-4 p-md-5">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

                {# Personal Information Section #}
                <div class="row g-4 mb-4">
                    <div class="col-12">
                        <h6 class="fw-bold text-primary mb-3"><i class="fas fa-id-card me-2"></i> Personal Information</h6>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.nom, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Nom',
                                    'required': 'required'
                                }
                            }) }}
                            {{ form_label(form.nom) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.prenom, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Pr√©nom',
                                    'required': 'required'
                                }
                            }) }}
                            {{ form_label(form.prenom) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.prenom) }}
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.email, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Email',
                                    'required': 'required'
                                }
                            }) }}
                            {{ form_label(form.email) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.email) }}
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.dateNaissance, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Date de naissance',
                                    'required': 'required'
                                }
                            }) }}
                            {{ form_label(form.dateNaissance) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.dateNaissance) }}
                            </div>
                        </div>
                    </div>
                </div>

                {# Account Security Section #}
                <div class="row g-4 mb-4">
                    <div class="col-12">
                        <h6 class="fw-bold text-primary mb-3"><i class="fas fa-lock me-2"></i> Account Security</h6>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.password, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Password',
                                    'autocomplete': 'new-password'
                                }
                            }) }}
                            {{ form_label(form.password) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.password) }}
                            </div>
                            <small class="text-muted mt-1 d-block">Leave blank to keep current password</small>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-floating">
                            {{ form_widget(form.role, {
                                'attr': {
                                    'class': 'form-select',
                                    'required': 'required'
                                }
                            }) }}
                            {{ form_label(form.role) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.role) }}
                            </div>
                        </div>
                    </div>
                </div>

                {# Profile Image Section #}
                <div class="row g-4 mb-4">
                    <div class="col-12">
                        <h6 class="fw-bold text-primary mb-3"><i class="fas fa-image me-2"></i> Profile Image</h6>
                        
                        <div class="image-upload-container border rounded-3 p-4">
                            <div class="image-preview-container text-center mb-4 position-relative" style="min-height: 200px;">
                                {% if user.imageUrl %}
                                    <img id="imagePreview" src="{{ asset('uploads/images/' ~ user.imageUrl) }}" 
                                         class="img-fluid rounded-3 shadow-sm mx-auto d-block" 
                                         style="max-height: 300px; object-fit: cover;">
                                    <div id="placeholderText" class="position-absolute top-50 start-50 translate-middle w-100 py-5 border-2 border-dashed rounded-3 bg-light" style="display: none;">
                                        <i class="fas fa-image fa-3x text-muted mb-3 d-block"></i>
                                        <p class="text-muted mb-0">No image selected</p>
                                    </div>
                                {% else %}
                                    <img id="imagePreview" src="" class="img-fluid rounded-3 shadow-sm mx-auto d-block" style="max-height: 300px; object-fit: cover; display: none;">
                                    <div id="placeholderText" class="position-absolute top-50 start-50 translate-middle w-100 py-5 border-2 border-dashed rounded-3 bg-light">
                                        <i class="fas fa-image fa-3x text-muted mb-3 d-block"></i>
                                        <p class="text-muted mb-0">Drag & drop or click to upload</p>
                                        <small class="text-muted">(Max 2MB, JPG/PNG/WEBP)</small>
                                    </div>
                                {% endif %}
                            </div>
                            
                            <div class="d-flex flex-column flex-md-row gap-3">
                                <div class="flex-grow-1">
                                    {{ form_widget(form.imageUrl, {
                                        'attr': {
                                            'class': 'form-control d-none',
                                            'accept': 'image/jpeg,image/png,image/webp'
                                        }
                                    }) }}
                                    <label for="{{ form.imageUrl.vars.id }}" class="btn btn-primary w-100 py-3 rounded-3">
                                        <i class="fas fa-cloud-upload-alt me-2"></i> Choose Image
                                    </label>
                                </div>
                                {% if user.imageUrl %}
                                    <button type="button" id="removeImageBtn" class="btn btn-outline-danger py-3 rounded-3">
                                        <i class="fas fa-trash-alt me-2"></i> Remove
                                    </button>
                                {% endif %}
                            </div>
                            <div class="invalid-feedback">
                                {{ form_errors(form.imageUrl) }}
                            </div>
                        </div>
                    </div>
                </div>

                {# Specialization Section (Conditional) #}
                {% if form.specialite is defined %}
                <div class="row g-4 mb-4">
                    <div class="col-12">
                        <h6 class="fw-bold text-primary mb-3"><i class="fas fa-certificate me-2"></i> Trainer Specialization</h6>
                    </div>
                    
                    <div class="col-md-12">
                        <div class="form-floating">
                            {{ form_widget(form.specialite, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Specialization'
                                }
                            }) }}
                            {{ form_label(form.specialite) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.specialite) }}
                            </div>
                        </div>
                    </div>
                </div>
                {% endif %}

                {# Form Actions #}
                <div class="row g-4 mt-5">
                    <div class="col-12">
                        <div class="d-flex justify-content-end gap-3">
                            <a href="{{ path('user_index') }}" class="btn btn-outline-secondary px-4 py-2 rounded-3">
                                <i class="fas fa-times me-2"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary px-4 py-2 rounded-3" id="submitBtn">
                                <i class="fas fa-save me-2"></i> Save Changes
                            </button>
                        </div>
                    </div>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>

    {# Styles #}
    <style>
        .form-floating label {
            color: #6c757d;
            padding: 1rem 0.75rem;
        }
        
        .form-control, .form-select {
            border-radius: 0.375rem;
            padding: 1rem 0.75rem;
            border: 1px solid #dee2e6;
            transition: all 0.15s ease-in-out;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
        
        .image-upload-container {
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }
        
        .image-upload-container:hover {
            background-color: #f1f8ff;
        }
        
        .invalid-feedback {
            font-size: 0.85rem;
        }
        
        .was-validated .form-control:invalid, 
        .was-validated .form-control:invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
        }
        
        .card {
            box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.08);
        }
    </style>

    {# JavaScript #}
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Image Upload Handling
        const imageInput = document.getElementById('{{ form.imageUrl.vars.id }}');
        const imagePreview = document.getElementById('imagePreview');
        const placeholderText = document.getElementById('placeholderText');
        const removeImageBtn = document.getElementById('removeImageBtn');
        const previewContainer = document.querySelector('.image-preview-container');
        
        // Handle image selection
        imageInput.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
                if (file.size > 2 * 1024 * 1024) {
                    alert('File is too large. Max size is 2MB.');
                    return;
                }
                
                if (!['image/jpeg', 'image/png', 'image/webp'].includes(file.type)) {
                    alert('Only JPG, PNG, and WEBP images are allowed.');
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    placeholderText.style.display = 'none';
                    if (removeImageBtn) removeImageBtn.style.display = 'block';
                }
                reader.readAsDataURL(file);
            }
        });

        // Handle image removal
        if (removeImageBtn) {
            removeImageBtn.addEventListener('click', function() {
                imageInput.value = '';
                imagePreview.src = '';
                imagePreview.style.display = 'none';
                placeholderText.style.display = 'block';
                this.style.display = 'none';
                
                // Add hidden field to indicate image removal
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'remove_image';
                input.value = '1';
                form.appendChild(input);
            });
        }

        // Drag and drop functionality
        previewContainer.addEventListener('dragover', (e) => {
            e.preventDefault();
            previewContainer.classList.add('border-primary');
            placeholderText.innerHTML = '<i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3 d-block"></i><p class="text-primary">Drop image here</p>';
        });

        previewContainer.addEventListener('dragleave', () => {
            previewContainer.classList.remove('border-primary');
            if (!imageInput.files.length && !imagePreview.src) {
                placeholderText.innerHTML = '<i class="fas fa-image fa-3x text-muted mb-3 d-block"></i><p class="text-muted">No image selected</p>';
            }
        });

        previewContainer.addEventListener('drop', (e) => {
            e.preventDefault();
            previewContainer.classList.remove('border-primary');

            if (e.dataTransfer.files.length) {
                imageInput.files = e.dataTransfer.files;
                const event = new Event('change');
                imageInput.dispatchEvent(event);
            }
        });

        // Form validation
        const form = document.querySelector('form');
        form.addEventListener('submit', function(e) {
            form.classList.add('was-validated');
            
            if (!form.checkValidity()) {
                e.preventDefault();
                e.stopPropagation();
                
                // Focus on first invalid field
                const firstInvalid = form.querySelector(':invalid');
                if (firstInvalid) {
                    firstInvalid.scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'center' 
                    });
                    firstInvalid.focus();
                }
            } else {
                // Disable submit button to prevent double submission
                const submitBtn = document.getElementById('submitBtn');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span> Saving...';
            }
        }, false);
    });
    </script>
{% endblock %}