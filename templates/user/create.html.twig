{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}Ajouter un utilisateur{% endblock %}

{% block body %}
    <div class="container-fluid px-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="fw-bold text-gradient">
                <i class="fas fa-user-plus me-2"></i>Ajouter un utilisateur
            </h1>
            <a href="{{ path('user_index') }}" class="btn btn-outline-secondary rounded-pill hover-scale">
                <i class="fas fa-arrow-left me-2"></i>Retour à la liste
            </a>
        </div>

        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb bg-white p-3 rounded-3 shadow-sm">
                <li class="breadcrumb-item"><a href="{{ path('app_admin') }}" class="text-decoration-none"><i class="fas fa-home me-1"></i> Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ path('user_index') }}" class="text-decoration-none"><i class="fas fa-users me-1"></i> Utilisateurs</a></li>
                <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-plus me-1"></i> Ajouter</li>
            </ol>
        </nav>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show shadow-sm floating-alert" role="alert">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-{{ label == 'success' ? 'check-circle' : 'exclamation-triangle' }} me-2"></i>
                        <span>{{ message }}</span>
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
            {% endfor %}
        {% endfor %}

        <div class="card border-0 shadow-lg overflow-hidden glass-morphism">
            <div class="card-header bg-white py-3 border-bottom d-flex justify-content-between align-items-center">
                <h5 class="mb-0 text-primary">
                    <i class="fas fa-user-plus me-2"></i>Formulaire de création
                </h5>
                <div class="badge bg-primary-subtle text-primary rounded-pill">
                    <i class="fas fa-info-circle me-1"></i> Tous les champs marqués (*) sont obligatoires
                </div>
            </div>
            <div class="card-body p-4 p-md-5">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': '', 'id': 'user-form'}}) }}
                
                <div class="row g-4 mb-4">
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control floating-input', 'placeholder': ' '}}) }}
                            {{ form_label(form.nom, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.prenom, {'attr': {'class': 'form-control floating-input', 'placeholder': ' '}}) }}
                            {{ form_label(form.prenom, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.prenom) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-4 mb-4">
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.email, {'attr': {'class': 'form-control floating-input', 'placeholder': ' '}}) }}
                            {{ form_label(form.email, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.email) }}
                            </div>
                            <div class="valid-feedback animated-feedback">
                                <i class="fas fa-check-circle me-1"></i> Email valide
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.dateNaissance, {'attr': {'class': 'form-control floating-input datepicker', 'placeholder': ' '}}) }}
                            {{ form_label(form.dateNaissance, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.dateNaissance) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-4 mb-4">
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.password, {'attr': {'class': 'form-control floating-input password-input', 'placeholder': ' '}}) }}
                            {{ form_label(form.password, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.password) }}
                            </div>
                            <div class="password-strength mt-2">
                                <div class="progress" style="height: 5px;">
                                    <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                                </div>
                                <small class="form-text text-muted d-block mt-1">
                                    <span class="password-strength-text">Faible</span>
                                    <span class="float-end"><i class="fas fa-eye-slash toggle-password" style="cursor: pointer;"></i></span>
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.role, {'attr': {'class': 'form-select floating-input role-select', 'placeholder': ' '}}) }}
                            {{ form_label(form.role, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.role) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-floating mb-4 floating-label-group" id="specialite_container" style="display: none;">
                    {{ form_widget(form.specialite, {'attr': {'class': 'form-control floating-input', 'placeholder': ' '}}) }}
                    {{ form_label(form.specialite, null, {'label_attr': {'class': 'floating-label'}}) }}
                    <div class="invalid-feedback animated-feedback">
                        {{ form_errors(form.specialite) }}
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold d-flex align-items-center">
                        <i class="fas fa-camera me-2"></i> Photo de profil
                        <span class="badge bg-secondary-subtle text-secondary ms-2">Optionnel</span>
                    </label>
                    <div class="file-upload-wrapper">
                        <div class="dropzone" id="imageDropzone">
                            <div class="dz-message" data-dz-message>
                                <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                                <h5>Glissez-déposez votre image ici</h5>
                                <span class="text-muted">ou cliquez pour sélectionner</span>
                            </div>
                            {{ form_widget(form.imageUrl, {'attr': {'class': 'd-none'}}) }}
                        </div>
                        <div class="mt-3 text-center position-relative">
                            <img id="image-preview" class="rounded-circle shadow object-fit-cover preview-image" alt="Aperçu de l'image">
                            <button id="remove-image" class="btn btn-danger btn-sm rounded-circle position-absolute remove-image-btn">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="form-text text-muted mt-2">
                            Formats acceptés: JPG, PNG, WebP, GIF (max 2Mo)
                        </div>
                    </div>
                    <div class="invalid-feedback" id="image-error"></div>
                </div>

                <div class="d-flex justify-content-end mt-5">
                    <button type="submit" class="btn btn-primary btn-lg rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="fas fa-save me-2"></i>Enregistrer
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }
        
        .text-gradient {
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            display: inline-block;
        }
        
        .glass-morphism {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
        
        .card {
            border-radius: 1rem;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
        
        .floating-label-group {
            position: relative;
            margin-bottom: 1.5rem;
        }
        
        .floating-input:focus ~ .floating-label,
        .floating-input:not(:placeholder-shown) ~ .floating-label {
            top: -10px;
            left: 15px;
            font-size: 12px;
            opacity: 1;
            background: white;
            padding: 0 5px;
            color: #667eea;
        }
        
        .floating-label {
            position: absolute;
            top: 50%;
            left: 15px;
            transform: translateY(-50%);
            transition: all 0.3s ease;
            pointer-events: none;
            color: #6c757d;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
        }
        
        .file-upload-wrapper {
            position: relative;
        }
        
        .dropzone {
            border: 2px dashed #d1d5db;
            border-radius: 0.5rem;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            background-color: #f8f9fa;
        }
        
        .dropzone:hover, .dropzone.dz-drag-hover {
            border-color: #667eea;
            background-color: #f0f5ff;
        }
        
        .dropzone.dz-drag-hover {
            background-color: #e6f0ff;
        }
        
        .invalid-feedback {
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }
        
        .animated-feedback {
            opacity: 1;
            transform: translateY(0);
        }
        
        .is-invalid ~ .invalid-feedback {
            opacity: 1;
            transform: translateY(0);
        }
        
        .btn-primary {
            background: var(--primary-gradient);
            border: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 7px 20px rgba(102, 126, 234, 0.4);
        }
        
        .btn-primary::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }
        
        .btn-primary:hover::after {
            transform: translateX(0);
        }
        
        .preview-image {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border: 3px solid #fff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: none;
        }
        
        .remove-image-btn {
            width: 30px;
            height: 30px;
            display: none;
            align-items: center;
            justify-content: center;
            top: 10px;
            right: calc(50% - 75px);
            border: 2px solid #fff;
        }
        
        .remove-image-btn:hover {
            background-color: #dc3545 !important;
        }
        
        .dz-message h5 {
            margin-bottom: 0.5rem;
            color: #495057;
        }
        
        .dz-message span {
            font-size: 0.875rem;
            color: #6c757d;
        }
        
        .hover-scale {
            transition: transform 0.3s ease;
        }
        
        .hover-scale:hover {
            transform: scale(1.05);
        }
        
        .floating-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            animation: slideIn 0.5s forwards, fadeOut 0.5s 3s forwards;
        }
        
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }
        
        .password-strength .progress-bar {
            transition: width 0.5s ease, background-color 0.5s ease;
        }
        
        .datepicker {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%236c757d' viewBox='0 0 16 16'%3E%3Cpath d='M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            background-size: 16px 16px;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestion de la spécialité selon le rôle
            const roleSelect = document.querySelector('#user_role');
            const specialiteContainer = document.querySelector('#specialite_container');
            
            const toggleSpecialite = () => {
                const isEntraineur = roleSelect.value === 'entraineur';
                specialiteContainer.style.display = isEntraineur ? 'block' : 'none';
                document.querySelector('#user_specialite').required = isEntraineur;
            };

            roleSelect.addEventListener('change', toggleSpecialite);
            toggleSpecialite();

            // Gestion de l'upload d'image
            const imageInput = document.querySelector('#user_imageUrl');
            const imagePreview = document.querySelector('#image-preview');
            const removeImageBtn = document.querySelector('#remove-image');
            const dropzone = document.querySelector('#imageDropzone');
            const imageError = document.querySelector('#image-error');

            // Initialisation si image existante
            if (imageInput.files.length > 0) {
                updateImagePreview();
            }

            // Gestion du click sur la dropzone
            dropzone.addEventListener('click', () => imageInput.click());
            
            // Gestion du drag and drop
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropzone.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropzone.classList.add('dz-drag-hover');
            }

            function unhighlight() {
                dropzone.classList.remove('dz-drag-hover');
            }

            dropzone.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                
                if (files.length) {
                    handleFiles(files);
                }
            }

            function handleFiles(files) {
                const file = files[0];
                
                // Validation du type de fichier
                if (!file.type.match('image.*')) {
                    showImageError('Veuillez sélectionner un fichier image valide');
                    return;
                }
                
                // Validation de la taille
                if (file.size > 2 * 1024 * 1024) {
                    showImageError('La taille de l\'image ne doit pas dépasser 2MB');
                    return;
                }
                
                imageInput.files = files;
                updateImagePreview();
            }

            function showImageError(message) {
                imageError.textContent = message;
                imageError.style.display = 'block';
                setTimeout(() => {
                    imageError.style.opacity = '1';
                }, 10);
            }

            function hideImageError() {
                imageError.style.opacity = '0';
                setTimeout(() => {
                    imageError.style.display = 'none';
                }, 300);
            }

            imageInput.addEventListener('change', function() {
                if (this.files.length > 0) {
                    handleFiles(this.files);
                }
            });

            function updateImagePreview() {
                const file = imageInput.files[0];
                if (file) {
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                        removeImageBtn.style.display = 'flex';
                        hideImageError();
                    };
                    
                    reader.readAsDataURL(file);
                }
            }

            removeImageBtn.addEventListener('click', function(e) {
                e.preventDefault();
                imageInput.value = '';
                imagePreview.style.display = 'none';
                this.style.display = 'none';
            });

            // Gestion de la force du mot de passe
            const passwordInput = document.querySelector('.password-input');
            if (passwordInput) {
                const progressBar = document.querySelector('.password-strength .progress-bar');
                const strengthText = document.querySelector('.password-strength-text');
                
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    let strength = 0;
                    
                    if (password.length >= 8) strength += 1;
                    if (password.length >= 12) strength += 1;
                    if (/[A-Z]/.test(password)) strength += 1;
                    if (/[0-9]/.test(password)) strength += 1;
                    if (/[^A-Za-z0-9]/.test(password)) strength += 1;
                    
                    const width = strength * 20;
                    progressBar.style.width = `${width}%`;
                    
                    let color, text;
                    if (strength <= 1) {
                        color = '#dc3545';
                        text = 'Faible';
                    } else if (strength <= 3) {
                        color = '#fd7e14';
                        text = 'Moyen';
                    } else {
                        color = '#28a745';
                        text = 'Fort';
                    }
                    
                    progressBar.style.backgroundColor = color;
                    strengthText.textContent = text;
                    strengthText.style.color = color;
                });
            }

            // Basculer la visibilité du mot de passe
            const togglePassword = document.querySelector('.toggle-password');
            if (togglePassword) {
                togglePassword.addEventListener('click', function() {
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);
                    this.classList.toggle('fa-eye-slash');
                    this.classList.toggle('fa-eye');
                });
            }

            // Validation du formulaire
            const form = document.querySelector('#user-form');
            if (form) {
                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    
                    form.classList.add('was-validated');
                }, false);
            }
        });
    </script>
{% endblock %}