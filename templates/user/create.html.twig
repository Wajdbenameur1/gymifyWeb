{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}Ajouter un utilisateur - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #858796;
            --success-color: #1cc88a;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --light-color: #f8f9fc;
            --gradient-primary: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
        }

        /* Card Styling */
        .card {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 2rem rgba(58, 59, 69, 0.15);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.75rem 2.5rem rgba(58, 59, 69, 0.25);
        }

        .card-header {
            background: var(--gradient-primary);
            border-radius: 1rem 1rem 0 0 !important;
            color: white;
            padding: 1.5rem;
        }

        /* Form Inputs */
        .form-control, .custom-select {
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            border: 1px solid #d1d3e2;
            transition: all 0.3s ease;
        }

        .form-control:focus, .custom-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

        .form-label {
            font-weight: 600;
            color: #2e2e2e;
        }

        .invalid-feedback {
            font-size: 0.85rem;
            color: var(--danger-color);
        }

        /* Password Toggle */
        .password-toggle {
            cursor: pointer;
            transition: color 0.3s;
        }

        .password-toggle:hover {
            color: var(--primary-color);
        }

        /* Image Upload Section */
        .image-upload-container {
            position: relative;
            margin-top: 1rem;
            padding: 1.5rem;
            border-radius: 0.75rem;
            background: #f8f9fc;
            border: 2px dashed #d1d3e2;
            transition: all 0.3s ease;
            text-align: center;
        }

        .image-upload-container:hover, .image-upload-container.dragover {
            border-color: var(--primary-color);
            background: #e6f0ff;
        }

        .image-upload-placeholder {
            text-align: center;
            color: #6c757d;
        }

        .image-upload-placeholder i {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            color: var(--secondary-color);
            transition: color 0.3s ease;
        }

        .image-upload-container:hover .image-upload-placeholder i,
        .image-upload-container.dragover .image-upload-placeholder i {
            color: var(--primary-color);
        }

        .image-preview {
            max-width: 200px;
            max-height: 200px;
            border-radius: 0.5rem;
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
            display: none;
            object-fit: cover;
            margin: 0 auto;
        }

        .image-action-btn {
            margin-top: 1rem;
            padding: 0.5rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: var(--primary-color);
            color: white;
            border: none;
        }

        .image-action-btn.add-image {
            background: var(--primary-color);
        }

        .image-action-btn.remove-image {
            background: var(--danger-color);
        }

        .image-action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.2);
        }

        .image-action-btn i {
            font-size: 1rem;
        }

        .image-error {
            font-size: 0.85rem;
            color: var(--danger-color);
            margin-top: 0.5rem;
            display: none;
        }

        /* Buttons */
        .btn-primary {
            background: var(--gradient-primary);
            border: none;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(46, 89, 217, 0.2);
        }

        .btn-secondary {
            background: #858796;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-secondary:hover {
            background: #6c757d;
            transform: translateY(-2px);
        }

        /* Flash Alerts */
        .floating-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            border-radius: 0.5rem;
            animation: slideIn 0.5s forwards, fadeOut 0.5s 3s forwards;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }

        /* Password Strength */
        .password-strength {
            margin-top: 0.5rem;
        }

        .progress {
            height: 5px;
            border-radius: 2.5px;
            background-color: #e9ecef;
        }

        .progress-bar {
            transition: width 0.5s ease, background-color 0.5s ease;
        }

        .strength-text {
            font-size: 0.8rem;
            margin-top: 0.25rem;
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .image-upload-container {
                padding: 1rem;
            }

            .image-preview {
                max-width: 150px;
                max-height: 150px;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid px-4">
        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4 py-3">
            <div>
                <h1 class="h3 mb-0 text-gray-800 font-weight-bold">
                    <i class="fas fa-user-plus mr-2 text-primary"></i> Ajouter un utilisateur
                </h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent p-0">
                        <li class="breadcrumb-item">
                            <a href="{{ path('app_admin') }}" class="text-primary"><i class="fas fa-home mr-1"></i> Dashboard</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="{{ path('user_index') }}" class="text-primary"><i class="fas fa-users mr-1"></i> Utilisateurs</a>
                        </li>
                        <li class="breadcrumb-item active">
                            <i class="fas fa-plus mr-1"></i> Ajouter
                        </li>
                    </ol>
                </nav>
            </div>
            <a href="{{ path('user_index') }}" class="btn btn-secondary btn-icon-split shadow-sm">
                <span class="icon text-white-50">
                    <i class="fas fa-arrow-left"></i>
                </span>
                <span class="text">Retour à la liste</span>
            </a>
        </div>

        <!-- Flash Messages -->
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show shadow-sm floating-alert" role="alert">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-{{ label == 'success' ? 'check-circle' : 'exclamation-triangle' }} mr-2"></i>
                        <span>{{ message }}</span>
                        <button type="button" class="close ml-auto" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                </div>
            {% endfor %}
        {% endfor %}

        <!-- Form Card -->
        <div class="card shadow-lg mb-4">
            <div class="card-header py-3 bg-gradient-primary text-white">
                <h6 class="m-0 font-weight-bold">
                    <i class="fas fa-user-edit mr-2"></i> Formulaire d'ajout
                </h6>
            </div>
            <div class="card-body p-4">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': '', 'id': 'user-form'}}) }}
                
                <div class="row">
                 <!-- Photo de profil -->
                <div class="form-group">
                    {{ form_label(form.imageUrl, null, {'label_attr': {'class': 'form-label'}}) }}
                    <div class="image-upload-container" id="imageUploadContainer">
                        <div class="image-upload-placeholder" id="imageUploadPlaceholder">
                            <i class="fas fa-cloud-upload-alt"></i>
                            <p>Glisser-déposer ou cliquer pour ajouter une image</p>
                        </div>
                        {% if form.vars.has_image %}
                            <img id="image-preview" class="image-preview" src="{{ asset(form.vars.data.imageUrl) }}" alt="Aperçu de l'image" style="display: block;" />
                        {% else %}
                            <img id="image-preview" class="image-preview" src="#" alt="Aperçu de l'image" />
                        {% endif %}
                        {{ form_widget(form.imageUrl) }}
                    </div>
                    <div class="d-flex justify-content-between align-items-center mt-2">
                        <small class="form-text text-muted">Formats acceptés: JPG, PNG, WebP, GIF, SVG (max 2MB)</small>
                        <button type="button" class="image-action-btn {{ form.vars.has_image ? 'remove-image' : 'add-image' }}" id="imageActionBtn">
                            <i class="fas {{ form.vars.has_image ? 'fa-trash-alt' : 'fa-upload' }}"></i>
                            {{ form.vars.has_image ? 'Supprimer l\'image' : 'Ajouter une image' }}
                        </button>
                    </div>
                    <div class="image-error" id="imageError"></div>
                    <div class="invalid-feedback">
                        {{ form_errors(form.imageUrl) }}
                    </div>
                </div>

                    <!-- Left Column -->
                    <div class="col-lg-6">
                        <!-- Nom -->
                        <div class="form-group">
                            {{ form_label(form.nom, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control' ~ (form.nom.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>

                        <!-- Prénom -->
                        <div class="form-group">
                            {{ form_label(form.prenom, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.prenom, {'attr': {'class': 'form-control' ~ (form.prenom.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.prenom) }}
                            </div>
                        </div>

                        <!-- Email -->
                        <div class="form-group">
                            {{ form_label(form.email, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.email, {'attr': {'class': 'form-control' ~ (form.email.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.email) }}
                            </div>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="col-lg-6">
                        <!-- Date de naissance -->
                        <div class="form-group">
                            {{ form_label(form.dateNaissance, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.dateNaissance, {'attr': {'class': 'form-control' ~ (form.dateNaissance.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.dateNaissance) }}
                            </div>
                        </div>

                        <!-- Rôle -->
                        <div class="form-group">
                            {{ form_label(form.role, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.role, {'attr': {'class': 'form-control' ~ (form.role.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.role) }}
                            </div>
                        </div>

                        <!-- Spécialité (conditionnelle) -->
                        <div class="form-group" id="specialite-container" style="display: none;">
                            {{ form_label(form.specialite, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.specialite, {'attr': {'class': 'form-control' ~ (form.specialite.vars.errors|length ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.specialite) }}
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            {{ form_label(form.password, null, {'label_attr': {'class': 'form-label'}}) }}
                            <div class="input-group">
                                {{ form_widget(form.password, {'attr': {
                                    'class': 'form-control' ~ (form.password.vars.errors|length ? ' is-invalid' : ''),
                                    'data-toggle': 'password'
                                }}) }}
                                <div class="input-group-append">
                                    <span class="input-group-text password-toggle">
                                        <i class="fas fa-eye"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="invalid-feedback">
                                {{ form_errors(form.password) }}
                            </div>
                            <small class="form-text text-muted">Minimum 8 caractères</small>
                            <div class="password-strength mt-2">
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                                </div>
                                <small class="strength-text">Force du mot de passe: <span class="strength-value">Faible</span></small>
                            </div>
                        </div>
                    </div>
                </div>
                </div>

              
                

               
                <!-- Bouton de soumission -->
                <div class="form-group mt-5">
                    <button type="submit" class="btn btn-primary btn-icon-split shadow">
                        <span class="icon text-white-50">
                            <i class="fas fa-save"></i>
                        </span>
                        <span class="text">Enregistrer</span>
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Afficher/masquer la spécialité selon le rôle
            const roleSelect = document.getElementById('user_role');
            const specialiteContainer = document.getElementById('specialite-container');

            function toggleSpecialite() {
                if (roleSelect.value === 'entraineur') {
                    specialiteContainer.style.display = 'block';
                    document.getElementById('user_specialite').required = true;
                } else {
                    specialiteContainer.style.display = 'none';
                    document.getElementById('user_specialite').required = false;
                }
            }

            roleSelect.addEventListener('change', toggleSpecialite);
            toggleSpecialite();

            // Basculer la visibilité du mot de passe
            const passwordInput = document.querySelector('[data-toggle="password"]');
            const passwordToggle = document.querySelector('.password-toggle');

            if (passwordToggle) {
                passwordToggle.addEventListener('click', function() {
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);
                    this.querySelector('i').classList.toggle('fa-eye');
                    this.querySelector('i').classList.toggle('fa-eye-slash');
                });
            }

            // Force du mot de passe
            if (passwordInput) {
                const progressBar = document.querySelector('.progress-bar');
                const strengthValue = document.querySelector('.strength-value');

                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    let strength = 0;

                    if (password.length >= 8) strength += 1;
                    if (password.length >= 12) strength += 1;
                    if (/[A-Z]/.test(password)) strength += 1;
                    if (/[0-9]/.test(password)) strength += 1;
                    if (/[^A-Za-z0-9]/.test(password)) strength += 1;

                    const width = strength * 20;
                    progressBar.style.width = `${width}%`;

                    let color, text;
                    if (strength <= 1) {
                        color = '#e74a3b';
                        text = 'Faible';
                    } else if (strength <= 3) {
                        color = '#f6c23e';
                        text = 'Moyen';
                    } else {
                        color = '#1cc88a';
                        text = 'Fort';
                    }

                    progressBar.style.backgroundColor = color;
                    strengthValue.textContent = text;
                    strengthValue.style.color = color;
                });
            }

            // Image Upload Handling (Click and Drag-and-Drop)
            const imageInput = document.getElementById('user_imageUrl');
            const imagePreview = document.getElementById('image-preview');
            const imageUploadContainer = document.getElementById('imageUploadContainer');
            const imageUploadPlaceholder = document.getElementById('imageUploadPlaceholder');
            const imageActionBtn = document.getElementById('imageActionBtn');
            const imageError = document.getElementById('imageError');

            // Method 1: Click to Upload
            imageActionBtn.addEventListener('click', function(e) {
                e.preventDefault();
                if (this.classList.contains('add-image')) {
                    imageInput.click();
                } else {
                    // Remove image
                    imageInput.value = '';
                    imagePreview.src = '#';
                    imagePreview.style.display = 'none';
                    imageUploadPlaceholder.style.display = 'block';
                    this.classList.remove('remove-image');
                    this.classList.add('add-image');
                    this.innerHTML = '<i class="fas fa-upload"></i> Ajouter une image';
                    imageError.style.display = 'none';
                }
            });

            // Method 2: Drag-and-Drop
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                imageUploadContainer.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                imageUploadContainer.addEventListener(eventName, () => {
                    imageUploadContainer.classList.add('dragover');
                }, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                imageUploadContainer.addEventListener(eventName, () => {
                    imageUploadContainer.classList.remove('dragover');
                }, false);
            });

            imageUploadContainer.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                if (files.length) {
                    handleFiles(files);
                }
            }

            // Click-to-Upload also triggers this
            imageInput.addEventListener('change', function() {
                if (this.files.length) {
                    handleFiles(this.files);
                }
            });

            function handleFiles(files) {
                const file = files[0];
                const allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif', 'image/svg+xml'];
                const maxSize = 2 * 1024 * 1024; // 2MB

                // Validation
                if (!allowedTypes.includes(file.type)) {
                    showImageError('Veuillez sélectionner un fichier image valide (JPEG, PNG, WebP, GIF, SVG).');
                    return;
                }

                if (file.size > maxSize) {
                    showImageError('La taille de l\'image ne doit pas dépasser 2MB.');
                    return;
                }

                imageInput.files = files;
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    imageUploadPlaceholder.style.display = 'none';
                    imageActionBtn.classList.remove('add-image');
                    imageActionBtn.classList.add('remove-image');
                    imageActionBtn.innerHTML = '<i class="fas fa-trash-alt"></i> Supprimer l\'image';
                    imageError.style.display = 'none';
                };
                reader.readAsDataURL(file);
            }

            function showImageError(message) {
                imageError.textContent = message;
                imageError.style.display = 'block';
            }

            // Validation du formulaire
            const form = document.getElementById('user-form');
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    </script>
{% endblock %}