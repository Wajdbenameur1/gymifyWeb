{% extends 'base.html.twig' %}

{% block title %}Inscription Sportif{% endblock %}

{% block body %}
<<<<<<< HEAD
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-lg">
                    <div class="card-header text-center bg-primary text-white">
                        <h3>Créer un compte Sportif</h3>
                    </div>
                    <div class="card-body">
                        {# Affichage des messages flash de succès ou d’erreur #}
                        {% for message in app.flashes('success') %}
                            <div class="alert alert-success">{{ message }}</div>
                        {% endfor %}
                        {% for message in app.flashes('error') %}
                            <div class="alert alert-danger">{{ message }}</div>
                        {% endfor %}

                        {{ form_start(form) }}
                            
                            <div class="mb-3">
                                {{ form_label(form.nom, null, {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                {{ form_errors(form.nom) }}
                            </div>

                            <div class="mb-3">
                                {{ form_label(form.prenom, null, {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    {{ form_widget(form.prenom, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                {{ form_errors(form.prenom) }}
                            </div>

                            <div class="mb-3">
                                {{ form_label(form.email, null, {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                    {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                {{ form_errors(form.email) }}
                            </div>

                            <div class="mb-3">
                                {{ form_label(form.password.first, null, {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                    {{ form_widget(form.password.first, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                {{ form_errors(form.password.first) }}
                            </div>

                            <div class="mb-3">
                                {{ form_label(form.password.second, null, {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                    {{ form_widget(form.password.second, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                {{ form_errors(form.password.second) }}
                            </div>

                            <div class="mb-3">
                                {{ form_label(form.dateNaissance, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(form.dateNaissance, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(form.dateNaissance) }}
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">S'inscrire</button>
                            </div>
=======
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-lg border-0 rounded-4">
                    <div class="card-header text-center bg-gradient-primary text-white py-4 rounded-top-4">
                        <h3 class="mb-0"><i class="fas fa-user-plus me-2"></i>Créer un compte Sportif</h3>
                    </div>
                    <div class="card-body p-5">
                        {% for label, messages in app.flashes %}
                            {% for message in messages %}
                                <div class="alert alert-{{ label == 'success' ? 'success' : 'danger' }} alert-dismissible fade show" role="alert">
                                    {{ message }}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            {% endfor %}
                        {% endfor %}

                        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': ''}}) }}
                        
                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.nom, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-user"></i></span>
                                {{ form_widget(form.nom) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.nom) }}
                        </div>

                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.prenom, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-user"></i></span>
                                {{ form_widget(form.prenom) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.prenom) }}
                        </div>

                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.email, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-envelope"></i></span>
                                {{ form_widget(form.email) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.email) }}
                        </div>

                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.password.first, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-lock"></i></span>
                                {{ form_widget(form.password.first) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.password.first) }}
                        </div>

                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.password.second, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-lock"></i></span>
                                {{ form_widget(form.password.second) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.password.second) }}
                        </div>

                        <div class="form-group mb-4 position-relative">
                            {{ form_label(form.dateNaissance, null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-calendar-alt"></i></span>
                                {{ form_widget(form.dateNaissance) }}
                            </div>
                            <div class="invalid-feedback mt-1"></div>
                            {{ form_errors(form.dateNaissance) }}
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg rounded-pill">
                                <i class="fas fa-user-plus me-2"></i>S'inscrire
                            </button>
                            <a href="{{ path('app_login') }}" class="btn btn-outline-secondary btn-lg rounded-pill">
                                <i class="fas fa-sign-in-alt me-2"></i>Se connecter
                            </a>
                        </div>
>>>>>>> 1e2a521f379c042fb627b82253dcd3e5a8f8a1fc

                        {{ form_end(form) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
<<<<<<< HEAD
{% endblock %}
=======

    <style>
        .bg-gradient-primary {
            background: linear-gradient(45deg, #007bff, #00bcd4);
        }
        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
        }
        .invalid-feedback {
            color: #dc3545;
            font-size: 0.875rem;
            display: block;
        }
        .input-group .form-control.is-invalid {
            z-index: 0;
        }
        .card {
            transition: transform 0.2s;
        }
        .card:hover {
            transform: translateY(-5px);
        }
        .btn-lg {
            padding: 0.75rem 1.5rem;
        }
        .form-group .invalid-feedback:empty {
            display: none;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector('.needs-validation');
            const inputs = form.querySelectorAll('[data-validate="true"]');

            // Validation function
            const validateField = async (input) => {
                const errorElement = input.closest('.form-group').querySelector('.invalid-feedback');
                const name = input.id.replace('sportif_', '').replace('_first', '').replace('_second', '');
                errorElement.textContent = '';

                if (name === 'nom' || name === 'prenom') {
                    if (!input.value.trim()) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = `Le ${name} est requis.`;
                    } else if (input.value.length > 50) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = `Le ${name} ne peut dépasser 50 caractères.`;
                    } else {
                        input.classList.remove('is-invalid');
                    }
                } else if (name === 'email') {
                    const email = input.value.trim();
                    if (!email) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = 'L\'email est requis.';
                    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = 'Veuillez entrer un email valide.';
                    } else {
                        try {
                            const response = await fetch('{{ path('api_check_email') }}', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                                body: `email=${encodeURIComponent(email)}`
                            });
                            const data = await response.json();
                            if (data.exists) {
                                input.classList.add('is-invalid');
                                errorElement.textContent = 'Cet email est déjà utilisé.';
                            } else {
                                input.classList.remove('is-invalid');
                            }
                        } catch (e) {
                            input.classList.add('is-invalid');
                            errorElement.textContent = 'Erreur lors de la vérification de l\'email.';
                        }
                    }
                } else if (name === 'password') {
                    const password1 = document.querySelector('#sportif_password_first').value;
                    const password2 = document.querySelector('#sportif_password_second').value;
                    if (!input.value) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = input.id.includes('second') ? 
                            'La confirmation du mot de passe est requise.' : 
                            'Le mot de passe est requis.';
                    } else if (input.value.length < 8) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = 'Le mot de passe doit contenir au moins 8 caractères.';
                    } else if (input.id.includes('second') && password1 !== password2) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = 'Les mots de passe ne correspondent pas.';
                    } else if (input.id.includes('first') && password2 && password1 !== password2) {
                        const secondInput = document.querySelector('#sportif_password_second');
                        secondInput.classList.add('is-invalid');
                        secondInput.closest('.form-group').querySelector('.invalid-feedback').textContent = 
                            'Les mots de passe ne correspondent pas.';
                        input.classList.remove('is-invalid');
                    } else {
                        input.classList.remove('is-invalid');
                        if (input.id.includes('first') && password2) {
                            document.querySelector('#sportif_password_second').classList.remove('is-invalid');
                            document.querySelector('#sportif_password_second')
                                .closest('.form-group').querySelector('.invalid-feedback').textContent = '';
                        }
                    }
                } else if (name === 'dateNaissance') {
                    if (!input.value) {
                        input.classList.add('is-invalid');
                        errorElement.textContent = 'La date de naissance est requise.';
                    } else {
                        const birthDate = new Date(input.value);
                        const today = new Date();
                        let age = today.getFullYear() - birthDate.getFullYear();
                        const monthDiff = today.getMonth() - birthDate.getMonth();
                        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
                            age--;
                        }
                        if (age < 12) {
                            input.classList.add('is-invalid');
                            errorElement.textContent = 'Vous devez avoir au moins 12 ans.';
                        } else {
                            input.classList.remove('is-invalid');
                        }
                    }
                }
            };

            // Validate on blur and input
            inputs.forEach(input => {
                input.addEventListener('blur', () => validateField(input));
                input.addEventListener('input', () => validateField(input));
            });

            // Form submission
            form.addEventListener('submit', async (e) => {
                let hasErrors = false;
                for (const input of inputs) {
                    await validateField(input);
                    if (input.classList.contains('is-invalid')) {
                        hasErrors = true;
                    }
                }
                if (hasErrors) {
                    e.preventDefault();
                    const firstError = form.querySelector('.is-invalid');
                    if (firstError) {
                        firstError.focus();
                        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        });
    </script>
{% endblock %}
>>>>>>> 1e2a521f379c042fb627b82253dcd3e5a8f8a1fc
