{% extends 'entraineur/homepageentraineur.html.twig' %}

{% block title %}{{ page_title }}{% endblock %}

{% block body %}
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- En-tête -->
            <div class="text-center mb-5">
                <h1 class="fw-bold text-primary">{{ page_title }}</h1>
                <p class="lead text-muted">Planifiez vos événements sportifs</p>
            </div>
            
            <!-- Messages flash -->
            {% for message in app.flashes('success') %}
                <div class="alert alert-success alert-dismissible fade show">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert alert-danger alert-dismissible fade show">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            {% endfor %}

            <!-- Formulaire -->
            {{ form_start(form, {'attr': {'class': 'card shadow-sm border-0 p-4 needs-validation', 'novalidate': 'novalidate'}}) }}
                <!-- Champ Titre -->
                <div class="mb-3">
                    {{ form_label(form.title, 'Titre de planning', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="fas fa-heading text-primary"></i>
                        </span>
                        {{ form_widget(form.title, {'attr': {
                            'class': 'form-control' ~ (form.title.vars.errors|length > 0 ? ' is-invalid' : ''),
                            'placeholder': 'Ex: Planning Janvier 2023',
                            'minlength': '3',
                            'maxlength': '50'
                        }}) }}
                    </div>
                    {{ form_errors(form.title) }}
                </div>

                <!-- Champ Description -->
                <div class="mb-3">
                    {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                    {{ form_widget(form.description, {'attr': {
                        'class': 'form-control' ~ (form.description.vars.errors|length > 0 ? ' is-invalid' : ''),
                        'rows': '4',
                        'placeholder': 'Détails de la séance...',
                        'maxlength': '300'
                    }}) }}
                    {{ form_errors(form.description) }}
                    <div class="form-text text-end">
                        <span id="desc-counter">0</span>/300 caractères
                    </div>
                </div>

                <!-- Dates -->
                <div class="row g-3 mb-4">
                    <div class="col-md-6">
                        {{ form_label(form.dateDebut, 'Date de début', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="far fa-calendar-alt text-primary"></i>
                            </span>
                            {{ form_widget(form.dateDebut, {'attr': {
                                'class': 'form-control' ~ (form.dateDebut.vars.errors|length > 0 ? ' is-invalid' : '')
                            }}) }}
                        </div>
                        {{ form_errors(form.dateDebut) }}
                    </div>
                    <div class="col-md-6">
                        {{ form_label(form.dateFin, 'Date de fin', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="far fa-calendar-check text-primary"></i>
                            </span>
                            {{ form_widget(form.dateFin, {'attr': {
                                'class': 'form-control' ~ (form.dateFin.vars.errors|length > 0 ? ' is-invalid' : '')
                            }}) }}
                        </div>
                        {{ form_errors(form.dateFin) }}
                        <div class="invalid-feedback" id="dateFinError">
                            La date de fin doit être postérieure à la date de début.
                        </div>
                    </div>
                </div>

                <!-- Boutons -->
                <div class="d-flex justify-content-end gap-3 mt-4">
                    <a href="{{ path('app_planning') }}" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Annuler
                    </a>
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-save me-2"></i>Créer
                    </button>
                </div>
            {{ form_end(form) }}
        </div>
    </div>

<!-- Validation côté client -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialisation
    const form = document.querySelector('.needs-validation');
    const dateDebut = document.getElementById('planning_dateDebut');
    const dateFin = document.getElementById('planning_dateFin');
    const dateFinError = document.getElementById('dateFinError');
    const descTextarea = document.getElementById('planning_description');
    const descCounter = document.getElementById('desc-counter');

    // Compteur de caractères pour la description
    if (descTextarea && descCounter) {
        descTextarea.addEventListener('input', function() {
            descCounter.textContent = this.value.length;
        });
        descCounter.textContent = descTextarea.value.length;
    }

    // Validation des dates
    function validateDates() {
        if (dateDebut.value && dateFin.value) {
            const debut = new Date(dateDebut.value);
            const fin = new Date(dateFin.value);
            
            if (fin <= debut) {
                dateFin.classList.add('is-invalid');
                dateFinError.style.display = 'block';
                return false;
            } else {
                dateFin.classList.remove('is-invalid');
                dateFinError.style.display = 'none';
                return true;
            }
        }
        return true;
    }

    // Écouteurs d'événements pour validation en temps réel
    dateDebut.addEventListener('change', validateDates);
    dateFin.addEventListener('change', validateDates);

    // Validation à la soumission
    form.addEventListener('submit', function(event) {
        event.preventDefault();
        event.stopPropagation();
        
        // Validation standard
        if (!form.checkValidity()) {
            form.classList.add('was-validated');
            return;
        }
        
        // Validation personnalisée des dates
        if (!validateDates()) {
            form.classList.add('was-validated');
            return;
        }
        
        // Si tout est valide, soumettre le formulaire
        form.submit();
    });
</script>

<!-- Style personnalisé -->
<style>
    .navbar-form.nav-search { display: none !important; }

    .card {
        border-radius: 12px;
        border: none;
        background-color: #f8f9fa;
    }
    .form-control:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.15);
    }
    .input-group-text {
        min-width: 45px;
        justify-content: center;
        background-color: #e9ecef;
    }
    .is-invalid {
        border-color: #dc3545;
    }
    .is-invalid:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }
    .invalid-feedback {
        display: none;
        color: #dc3545;
        font-size: 0.875em;
    }
    .was-validated .form-control:invalid ~ .invalid-feedback,
    .form-control.is-invalid ~ .invalid-feedback {
        display: block;
    }
    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    .btn-primary:hover {
        background-color: #0b5ed7;
        border-color: #0a58ca;
    }
</style>
{% endblock %}