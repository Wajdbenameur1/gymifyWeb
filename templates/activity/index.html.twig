{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}Complaints Management{% endblock %}

{% block body %}
    <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row pt-2 pb-4">
        <div>
            <h3 class="fw-bold mb-3">Complaints Management</h3>
            <h6 class="op-7 mb-2">Complaints Monitoring Dashboard</h6>
        </div>
        <div class="ms-md-auto py-2 py-md-0 d-flex gap-2">
            <button class="btn btn-outline-primary btn-round" id="filterButton">
                <i class="fas fa-filter me-2"></i> Filter
                <span class="badge bg-primary" id="filterBadge" style="display: none;"></span>
            </button>
        </div>
    </div>

    {# Flash messages #}
    {% for message in app.flashes('success') %}
        <div class="alert alert-success alert-dismissible fade show">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
    {% for message in app.flashes('warning') %}
        <div class="alert alert-warning alert-dismissible fade show">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger alert-dismissible fade show">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}

    {# Stats Widgets #}
    <div class="row mb-4">
        <div class="col-md-4 mb-3">
            <div class="card card-round shadow-sm bg-gradient-primary">
                <div class="card-body py-4">
                    <div class="d-flex align-items-center">
                        <div class="icon-shape icon-lg bg-white rounded-3 text-primary me-3">
                            <i class="fas fa-inbox fa-2x"></i>
                        </div>
                        <div>
                            <h6 class="text-white mb-0">Total Complaints</h6>
                            <h3 class="text-white mb-0" id="totalComplaintsCount">{{ reclamations|length }}</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card card-round shadow-sm bg-gradient-warning">
                <div class="card-body py-4">
                    <div class="d-flex align-items-center">
                        <div class="icon-shape icon-lg bg-white rounded-3 text-warning me-3">
                            <i class="fas fa-exclamation-circle fa-2x"></i>
                        </div>
                        <div>
                            <h6 class="text-white mb-0">Pending Complaints</h6>
                            <h3 class="text-white mb-0" id="pendingComplaintsCount">{{ reclamations|filter(r => r.statut == 'Pending')|length }}</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card card-round shadow-sm bg-gradient-success">
                <div class="card-body py-4">
                    <div class="d-flex align-items-center">
                        <div class="icon-shape icon-lg bg-white rounded-3 text-success me-3">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                        <div>
                            <h6 class="text-white mb-0">Processed Complaints</h6>
                            <h3 class="text-white mb-0" id="processedComplaintsCount">{{ reclamations|filter(r => r.statut == 'Processed')|length }}</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {# Complaints Table #}
    <div class="card card-round shadow-lg mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <form method="post" action="{{ path('app_admin_reclamation_index') }}" id="reclamationForm">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th><input type="checkbox" id="selectAllReclamations" class="reclamation-checkbox"></th>
                                <th>User</th>
                                <th>Subject</th>
                                <th>Description</th>
                                <th>Status</th>
                                <th>Date</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="reclamationsTableBody">
                            {% for reclamation in reclamations %}
                            <tr data-status="{{ reclamation.statut }}"
                                data-searchable="{{ reclamation.user.nom|lower }} {{ reclamation.user.prenom|lower }} {{ reclamation.sujet|lower }} {{ reclamation.description|lower }}">
                                <td>
                                    <input type="checkbox" name="selected_reclamations[]" value="{{ reclamation.id }}" class="reclamation-checkbox">
                                </td>
                                <td class="searchable-user">{{ reclamation.user.nom }} {{ reclamation.user.prenom }}</td>
                                <td class="searchable-subject">{{ reclamation.sujet }}</td>
                                <td class="searchable-description">{{ reclamation.description|slice(0, 50) ~ (reclamation.description|length > 50 ? '...' : '') }}</td>
                                <td>
                                    <span class="badge
                                        {% if reclamation.statut == 'Pending' %}bg-warning
                                        {% elseif reclamation.statut == 'Processed' %}bg-success
                                        {% else %}bg-info{% endif %}">
                                        {{ reclamation.statut }}
                                    </span>
                                </td>
                                <td>{{ reclamation.dateCreation|date('d/m/Y H:i') }}</td>
                                <td class="text-end">
                                    <div class="d-flex justify-content-end gap-2">
                                        <button type="button" class="btn btn-sm btn-outline-primary rounded-pill respond-btn"
                                                data-bs-toggle="tooltip" data-bs-title="Respond"
                                                data-reclamation-id="{{ reclamation.id }}">
                                            <i class="fas fa-comment"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger rounded-pill delete-reclamation-btn"
                                                data-bs-toggle="tooltip" data-bs-title="Delete"
                                                data-reclamation-id="{{ reclamation.id }}"
                                                data-csrf-token="{{ csrf_token('delete_reclamation' ~ reclamation.id) }}">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            {% else %}
                            <tr>
                                <td colspan="7" class="text-center py-4 text-muted">
                                    <i class="fas fa-info-circle me-2"></i> No complaints found
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    {# Response Form #}
                    <div class="mt-4">
                        <div class="card card-round shadow-lg">
                            <div class="card-header bg-gradient-primary text-white">
                                <h5 class="mb-0">Respond to Selected Complaints</h5>
                            </div>
                            <div class="card-body">
                                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                                    {{ form_errors(form) }}
                                    {{ form_row(form.message, {
                                        'label': 'Response Message',
                                        'attr': {'class': 'form-control', 'rows': 5, 'placeholder': 'Enter your response here...'},
                                        'label_attr': {'class': 'form-label fw-bold'}
                                    }) }}
                                    {{ form_row(form.submit, {
                                        'label': 'Send Response',
                                        'attr': {'class': 'btn btn-primary btn-round mt-3'}
                                    }) }}
                                {{ form_end(form) }}
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    {# Sent Responses Table #}
    <div class="card card-round shadow-lg">
        <div class="card-body">
            <div class="table-responsive">
                <form method="post" action="{{ path('app_admin_reponse_delete') }}" id="deleteResponsesForm">
                    <div class="mb-3">
                        <button type="button" class="btn btn-outline-primary btn-round me-2" id="selectAllResponses">
                            <i class="fas fa-check me-2"></i> Select All
                        </button>
                        <button type="submit" class="btn btn-outline-danger btn-round" id="deleteSelectedResponses"
                                data-bs-toggle="tooltip" data-bs-title="Delete Selected">
                            <i class="fas fa-trash me-2"></i> Delete Selected
                        </button>
                    </div>
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th><input type="checkbox" id="selectAllResponseCheckboxes" class="reponse-checkbox"></th>
                                <th>Message</th>
                                <th>Sent By</th>
                                <th>Date</th>
                                <th>Associated Complaint</th>
                            </tr>
                        </thead>
                        <tbody id="responsesTableBody">
                            {% for reponse in reponses %}
                            <tr>
                                <td>
                                    <input type="checkbox" name="selected_reponses[]" value="{{ reponse.id }}" class="reponse-checkbox">
                                </td>
                                <td>{{ reponse.message|slice(0, 50) ~ (reponse.message|length > 50 ? '...' : '') }}</td>
                                <td>{{ reponse.admin.nom }} {{ reponse.admin.prenom }}</td>
                                <td>{{ reponse.dateReponse|date('d/m/Y H:i') }}</td>
                                <td>{{ reponse.reclamation.sujet|slice(0, 30) ~ (reponse.reclamation.sujet|length > 30 ? '...' : '') }}</td>
                            </tr>
                            {% else %}
                            <tr>
                                <td colspan="5" class="text-center py-4 text-muted">
                                    <i class="fas fa-info-circle me-2"></i> No responses found
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    <input type="hidden" name="_token" value="{{ csrf_token('delete_reponses') }}">
                </form>
            </div>
        </div>
    </div>

    {# Filter Modal #}
    <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="filterModalLabel">Filter Complaints</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Complaint Status</label>
                        <div class="form-check">
                            <input class="form-check-input filter-checkbox" type="checkbox" value="Pending" id="filterPending" checked>
                            <label class="form-check-label" for="filterPending">Pending</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input filter-checkbox" type="checkbox" value="Processed" id="filterProcessed" checked>
                            <label class="form-check-label" for="filterProcessed">Processed</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" id="resetFilters">Reset</button>
                    <button type="button" class="btn btn-primary" id="applyFilters">Apply Filters</button>
                </div>
            </div>
        </div>
    </div>

    {# Delete Confirmation Modal for Complaints #}
    <div class="modal fade" id="deleteReclamationModal" tabindex="-1" aria-labelledby="deleteReclamationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteReclamationModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this complaint? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteReclamationForm" method="POST" action="">
                        <input type="hidden" name="_token" value="">
                        <button type="submit" class="btn btn-danger">Confirm Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    {# Delete Confirmation Modal for Responses #}
    <div class="modal fade" id="deleteResponsesModal" tabindex="-1" aria-labelledby="deleteResponsesModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteResponsesModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the selected responses? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" form="deleteResponsesForm">Confirm Delete</button>
                </div>
            </div>
        </div>
    </div>

    <style>
        .icon-shape {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .bg-gradient-primary {
            background: linear-gradient(135deg, #3a7bd5, #00d2ff);
        }
        .bg-gradient-success {
            background: linear-gradient(135deg, #11998e, #38ef7d);
        }
        .bg-gradient-warning {
            background: linear-gradient(135deg, #f46b45, #eea849);
        }
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            color: #6c757d;
        }
        .card-round {
            border-radius: 1rem;
        }
        .modal-content {
            border-radius: 1rem;
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        .modal-header {
            border-bottom: none;
            padding-bottom: 0;
        }
        .modal-footer {
            border-top: none;
        }
        .filter-checkbox {
            margin-right: 10px;
        }
        .form-check-label {
            user-select: none;
        }
        .search-highlight {
            background-color: #fff3cd;
            font-weight: bold;
        }
        .no-results-row td {
            padding: 2rem !important;
        }
        .card-header.bg-gradient-primary {
            border-radius: 1rem 1rem 0 0;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enable tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Select all reclamations
            const selectAllReclamations = document.getElementById('selectAllReclamations');
            selectAllReclamations.addEventListener('change', function() {
                document.querySelectorAll('.reclamation-checkbox').forEach(cb => {
                    cb.checked = this.checked;
                });
            });

            // Select all responses
            const selectAllResponses = document.getElementById('selectAllResponses');
            const selectAllResponseCheckboxes = document.getElementById('selectAllResponseCheckboxes');
            selectAllResponses.addEventListener('click', function() {
                const newState = !selectAllResponseCheckboxes.checked;
                selectAllResponseCheckboxes.checked = newState;
                document.querySelectorAll('.reponse-checkbox').forEach(cb => {
                    cb.checked = newState;
                });
            });
            selectAllResponseCheckboxes.addEventListener('change', function() {
                document.querySelectorAll('.reponse-checkbox').forEach(cb => {
                    cb.checked = this.checked;
                });
            });

            // Delete confirmation modal for complaints
            const deleteReclamationModal = new bootstrap.Modal(document.getElementById('deleteReclamationModal'));
            const deleteReclamationForm = document.getElementById('deleteReclamationForm');
            document.querySelectorAll('.delete-reclamation-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const reclamationId = this.getAttribute('data-reclamation-id');
                    const csrfToken = this.getAttribute('data-csrf-token');
                    deleteReclamationForm.action = `/admin/reclamation/${reclamationId}/delete`;
                    deleteReclamationForm.querySelector('input[name="_token"]').value = csrfToken;
                    deleteReclamationModal.show();
                });
            });

            // Delete confirmation modal for responses
            const deleteResponsesModal = new bootstrap.Modal(document.getElementById('deleteResponsesModal'));
            document.getElementById('deleteSelectedResponses').addEventListener('click', function(e) {
                e.preventDefault();
                const checked = document.querySelectorAll('input[name="selected_reponses[]"]:checked').length;
                if (checked === 0) {
                    alert('Please select at least one response to delete.');
                    return;
                }
                deleteResponsesModal.show();
            });

            // Respond button to select single reclamation
            document.querySelectorAll('.respond-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const reclamationId = this.getAttribute('data-reclamation-id');
                    document.querySelectorAll('.reclamation-checkbox').forEach(cb => {
                        cb.checked = cb.value === reclamationId;
                    });
                    document.querySelector('#reclamationForm').scrollIntoView({ behavior: 'smooth' });
                });
            });

            // Filter functionality
            const filterModal = new bootstrap.Modal(document.getElementById('filterModal'));
            const filterButton = document.getElementById('filterButton');
            const applyFiltersBtn = document.getElementById('applyFilters');
            const resetFiltersBtn = document.getElementById('resetFilters');
            const checkboxes = document.querySelectorAll('.filter-checkbox');
            const filterBadge = document.getElementById('filterBadge');
            const globalSearchInput = document.getElementById('globalSearchInput');

            filterButton.addEventListener('click', () => filterModal.show());

            applyFiltersBtn.addEventListener('click', function() {
                const selectedStatuses = getSelectedStatuses();
                updateFilteredComplaints(selectedStatuses);
                updateFilterBadge(selectedStatuses);
                filterModal.hide();
            });

            resetFiltersBtn.addEventListener('click', function() {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = true;
                });
                applyFiltersBtn.click();
            });

            if (globalSearchInput) {
                let searchTimeout;
                globalSearchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        const selectedStatuses = getSelectedStatuses();
                        updateFilteredComplaints(selectedStatuses);
                    }, 300);
                });
            }

            function getSelectedStatuses() {
                const selected = [];
                checkboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        selected.push(checkbox.value);
                    }
                });
                return selected;
            }

            function updateFilteredComplaints(selectedStatuses) {
                const searchTerm = globalSearchInput ? globalSearchInput.value.toLowerCase() : '';
                let visibleCount = 0;
                let pendingCount = 0;
                let processedCount = 0;

                document.querySelectorAll('#reclamationsTableBody tr[data-status]').forEach(row => {
                    const status = row.getAttribute('data-status');
                    const matchesStatus = selectedStatuses.includes(status);
                    const matchesSearch = searchTerm === '' ||
                                        row.getAttribute('data-searchable').includes(searchTerm);

                    if (matchesStatus && matchesSearch) {
                        row.style.display = '';
                        visibleCount++;
                        if (status === 'Pending') pendingCount++;
                        if (status === 'Processed') processedCount++;
                        highlightSearchTerms(row, searchTerm);
                    } else {
                        row.style.display = 'none';
                    }
                });

                document.getElementById('totalComplaintsCount').textContent = visibleCount;
                document.getElementById('pendingComplaintsCount').textContent = pendingCount;
                document.getElementById('processedComplaintsCount').textContent = processedCount;

                updateNoResultsMessage(visibleCount);
            }

            function highlightSearchTerms(row, term) {
                if (term === '') {
                    const userCell = row.querySelector('.searchable-user');
                    const subjectCell = row.querySelector('.searchable-subject');
                    const descCell = row.querySelector('.searchable-description');
                    if (userCell) userCell.innerHTML = userCell.textContent;
                    if (subjectCell) subjectCell.innerHTML = subjectCell.textContent;
                    if (descCell) descCell.innerHTML = descCell.textContent;
                    return;
                }

                const regex = new RegExp(term, 'gi');
                const userCell = row.querySelector('.searchable-user');
                const subjectCell = row.querySelector('.searchable-subject');
                const descCell = row.querySelector('.searchable-description');

                if (userCell) {
                    userCell.innerHTML = userCell.textContent.replace(
                        regex,
                        match => `<span class="search-highlight">${match}</span>`
                    );
                }
                if (subjectCell) {
                    subjectCell.innerHTML = subjectCell.textContent.replace(
                        regex,
                        match => `<span class="search-highlight">${match}</span>`
                    );
                }
                if (descCell) {
                    descCell.innerHTML = descCell.textContent.replace(
                        regex,
                        match => `<span class="search-highlight">${match}</span>`
                    );
                }
            }

            function updateNoResultsMessage(visibleCount) {
                const noResultsRow = document.querySelector('#reclamationsTableBody .no-results-row');
                const hasComplaints = document.querySelectorAll('#reclamationsTableBody tr[data-status]').length > 0;

                if (visibleCount === 0 && hasComplaints) {
                    if (!noResultsRow) {
                        const tbody = document.getElementById('reclamationsTableBody');
                        const newRow = document.createElement('tr');
                        newRow.className = 'no-results-row';
                        newRow.innerHTML = `
                            <td colspan="7" class="text-center py-4 text-muted">
                                <i class="fas fa-search me-2"></i> No complaints match your search and filters
                            </td>
                        `;
                        tbody.appendChild(newRow);
                    }
                } else if (noResultsRow) {
                    noResultsRow.remove();
                }
            }

            function updateFilterBadge(selectedStatuses) {
                const totalStatuses = checkboxes.length;
                if (selectedStatuses.length === totalStatuses) {
                    filterBadge.style.display = 'none';
                } else {
                    filterBadge.textContent = totalStatuses - selectedStatuses.length;
                    filterBadge.style.display = 'inline-flex';
                }
            }

            // Initialize with all statuses selected
            applyFiltersBtn.click();

            // Form submission validation
            document.getElementById('reclamationForm').addEventListener('submit', function(e) {
                const checked = document.querySelectorAll('input[name="selected_reclamations[]"]:checked').length;
                if (checked === 0) {
                    e.preventDefault();
                    alert('Please select at least one complaint.');
                }
            });
        });
    </script>
{% endblock %}