{% extends 'sportif/base.html.twig' %}

{% block title %}{{ salle.nom }} | Gym{% endblock %}

{% block body %}
    <!-- Breadcrumb Section -->
    <section class="breadcrumb-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="breadcrumb-text">
                        <h2>{{ salle.nom }}</h2>
                        <nav class="bt-option">
                            <a href="{{ path('app_home') }}">Home</a>
                            <span>/</span>
                            <span>Gym</span>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Gym Details Section -->
    <section class="gym-details-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <div class="gym-image">
                        {% if salle.urlPhoto %}
                            <img src="{{ asset('Uploads/images/' ~ salle.urlPhoto) }}" alt="{{ salle.nom }}">
                        {% else %}
                            <img src="{{ asset('img/placeholder-gym.jpg') }}" alt="Default Gym Image">
                        {% endif %}
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="gym-content">
                        <h2>{{ salle.nom }}</h2>
                        <p>{{ salle.details }}</p>
                        <ul class="gym-meta">
                            <li><i class="fas fa-map-marker-alt"></i> {{ salle.adresse }}</li>
                            <li><i class="fas fa-user"></i> {% if salle.responsable %}{{ salle.responsable.prenom|default('') }} {{ salle.responsable.nom|default('N/A') }}{% else %}No manager{% endif %}</li>
                            <li><i class="fas fa-phone"></i> {{ salle.numTel }}</li>
                            <li><i class="fas fa-envelope"></i> {{ salle.email }}</li>
                        </ul>
                        <div class="gym-actions">
                            <a href="#subscriptions" class="primary-btn" data-tooltip="View available subscriptions">Subscriptions</a>
                            <a href="#events" class="primary-btn" data-tooltip="View upcoming events">Events</a>
                            <a href="{{ path('app_home') }}" class="primary-btn secondary" data-tooltip="Return to homepage">Back</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Subscriptions Section -->
    <section id="subscriptions" class="subscriptions-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="section-title">
                        <span>Our Plans</span>
                        <h2>Available Subscriptions</h2>
                    </div>
                </div>
            </div>

            {% set uniqueActivites = [] %}
            {% for abonnement in abonnements|default([]) %}
                {% if abonnement.activite is not null and abonnement.activite.id not in uniqueActivites|map(a => a.id) %}
                    {% set uniqueActivites = uniqueActivites|merge([abonnement.activite]) %}
                {% endif %}
            {% endfor %}

            {% set activityIcons = {
                'Yoga': 'fa-spa',
                'Boxing': 'fa-fist-raised',
                'Zumba': 'fa-running',
                'Weightlifting': 'fa-dumbbell',
                'Cardio': 'fa-heartbeat',
                'Musculation': 'fa-dumbbell'
            } %}

            {% if uniqueActivites|length > 0 %}
                <div class="row">
                    {% for activite in uniqueActivites %}
                        {% set abonnementsForActivite = abonnements|filter(a => a.activite.id == activite.id) %}
                        {% if abonnementsForActivite|length > 0 %}
                            <div class="col-lg-4 col-md-6">
                                <div class="activity-card">
                                    <div class="activity-name">
                                        <i class="fas {{ activityIcons[activite.nom] ?? 'fa-dumbbell' }}"></i>
                                        <h3>{{ activite.nom }}</h3>
                                    </div>
                                    <div class="subscriptions-container">
                                        {% for abonnement in abonnementsForActivite %}
                                            <div class="subscription-card">
                                                <div class="subscription-header">
                                                    <h4>{{ abonnement.type.value|capitalize }}</h4>
                                                    <div class="price">{{ abonnement.tarif }} DT</div>
                                                </div>
                                                <div class="subscription-body">
                                                    <ul class="subscription-features">
                                                        <li><i class="fas fa-clock"></i> 
                                                            {% if abonnement.type.value == 'mois' %}30 days
                                                            {% elseif abonnement.type.value == 'trimestre' %}90 days
                                                            {% elseif abonnement.type.value == 'ann√©e' %}365 days
                                                            {% else %}Custom{% endif %}
                                                        </li>
                                                        <li><i class="fas fa-calendar-alt"></i> {{ abonnement.joursAcces|default([])|join(', ') }}</li>
                                                    </ul>
                                                    <button class="subscription-btn" data-abonnement-id="{{ abonnement.id }}" data-abonnement-tarif="{{ abonnement.tarif }}" data-abonnement-type="{{ abonnement.type.value|capitalize }}" data-abonnement-activite="{{ activite.nom }}" data-tooltip="Subscribe to this plan">Subscribe</button>
                                                </div>
                                            </div>
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
            {% else %}
                <div class="col-lg-12 text-center">
                    <p>No subscriptions available at the moment.</p>
                </div>
            {% endif %}
        </div>
    </section>

    <!-- Payment Modal -->
    <div class="payment-modal" id="payment-modal">
        <div class="payment-content">
            <span class="close-modal">&times;</span>
            <div class="payment-container">
                <div class="payment-header">
                    <h2>Subscription Payment</h2>
                    <p>Securely complete your subscription</p>
                </div>
                <div class="payment-body">
                    <form id="payment-form">
                        <div id="card-element"></div>
                        <button id="submit" type="submit">
                            <span class="spinner"></span>
                            Pay <span id="payment-amount"></span> DT
                        </button>
                        <div id="error-message"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="confirmation-modal" id="confirmation-modal">
        <div class="confirmation-content">
            <span class="close-confirmation">&times;</span>
            <div class="confirmation-icon">
                <svg viewBox="0 0 24 24">
                    <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
                </svg>
            </div>
            <h3 class="confirmation-title">Payment Successful!</h3>
            <p>Your subscription has been activated.</p>
            <div class="confirmation-qr">
                <p>Scan this QR code to download your confirmation:</p>
                <div id="confirmation-qr-code"></div>
            </div>
            <div class="confirmation-details">
                <div class="confirmation-detail">
                    <span class="confirmation-detail-label">Plan Type:</span>
                    <span class="confirmation-detail-value" id="confirmation-type"></span>
                </div>
                <div class="confirmation-detail">
                    <span class="confirmation-detail-label">Activity:</span>
                    <span class="confirmation-detail-value" id="confirmation-activity"></span>
                </div>
                <div class="confirmation-detail">
                    <span class="confirmation-detail-label">Start Date:</span>
                    <span class="confirmation-detail-value" id="confirmation-start"></span>
                </div>
                <div class="confirmation-detail">
                    <span class="confirmation-detail-label">End Date:</span>
                    <span class="confirmation-detail-value" id="confirmation-end"></span>
                </div>
            </div>
            <button class="confirmation-button" id="confirmation-button">View My Subscriptions</button>
        </div>
    </div>

    <!-- Notification Modal -->
    <div class="notification-modal" id="notification-modal">
        <div class="notification-content">
            <div class="notification-icon">
                <i class="fas fa-bell"></i>
            </div>
            <h3 class="notification-title">Subscription Reminder</h3>
            <p class="notification-message"></p>
            <div class="notification-actions">
                <button class="notification-btn remind-later">Remind Later</button>
                <button class="notification-btn cancel">Cancel</button>
            </div>
        </div>
    </div>

    <!-- Events Section -->
    <section id="events" class="events-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="section-title">
                        <span>What's Happening</span>
                        <h2>Upcoming Events</h2>
                    </div>
                </div>
            </div>
            <div class="row">
                {% for equipe_event in equipe_events %}
                    <div class="col-lg-4 col-md-6">
                        <div class="event-card">
                            <div class="event-pic">
                                {% if equipe_event.event.imageUrl %}
                                    <img src="{{ asset('Uploads/evenements/' ~ equipe_event.event.imageUrl) }}" alt="{{ equipe_event.event.nom }}">
                                {% else %}
                                    <img src="{{ asset('img/event-default.jpg') }}" alt="Default Event Image">
                                {% endif %}
                            </div>
                            <div class="event-text">
                                <span>{{ equipe_event.event.type ? equipe_event.event.type.value|capitalize : 'Not defined' }}</span>
                                <h5>{{ equipe_event.event.nom }}</h5>
                                <p>{{ equipe_event.event.description|length > 100 ? equipe_event.event.description|slice(0, 100) ~ '...' : equipe_event.event.description }}</p>
                                <ul class="event-details">
                                    <li><i class="fas fa-calendar"></i> {{ equipe_event.event.date|date('d/m/Y') }}</li>
                                    <li><i class="fas fa-clock"></i> {{ equipe_event.event.heureDebut|date('H:i') }} - {{ equipe_event.event.heureFin|date('H:i') }}</li>
                                    <li><i class="fas fa-map-marker-alt"></i> {{ equipe_event.event.lieu|default('Not specified') }}</li>
                                </ul>
                                <a href="{{ path('app_equipe_event_show', {'id': equipe_event.id}) }}" class="event-btn" data-tooltip="View event details">Details</a>
                            </div>
                        </div>
                    </div>
                {% else %}
                    <div class="col-lg-12 text-center">
                        <p>No events available at the moment.</p>
                    </div>
                {% endfor %}
            </div>
        </div>
    </section>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Poppins:wght@600;700&display=swap">
    <style>
        :root {
            --primary: #ff6f00;
            --primary-dark: #e55f00;
            --secondary: #1a1a1a;
            --text: #2d2d2d;
            --text-light: #6b7280;
            --background: #f9fafb;
            --card-bg: #ffffff;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            --shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }

        /* Breadcrumb Section */
        .breadcrumb-section {
            background: linear-gradient(135deg, var(--secondary), #333);
            padding: 100px 0;
            color: #fff;
        }
        .breadcrumb-text h2 {
            font-family: 'Poppins', sans-serif;
            font-size: 40px;
            font-weight: 700;
            margin-bottom: 12px;
            text-transform: uppercase;
        }
        .bt-option {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 16px;
        }
        .bt-option a, .bt-option span {
            color: var(--primary);
            text-decoration: none;
            transition: color 0.3s ease;
        }
        .bt-option a:hover {
            color: var(--primary-dark);
        }

        /* Gym Details Section */
        .gym-details-section {
            padding: 80px 0;
            background: var(--background);
        }
        .gym-image {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: transform 0.4s ease;
        }
        .gym-image:hover {
            transform: scale(1.02);
        }
        .gym-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }
        .gym-content h2 {
            font-family: 'Poppins', sans-serif;
            font-size: 36px;
            font-weight: 700;
            color: var(--text);
            margin-bottom: 16px;
        }
        .gym-content p {
            font-size: 16px;
            color: var(--text-light);
            line-height: 1.8;
            margin-bottom: 24px;
        }
        .gym-meta {
            list-style: none;
            margin-bottom: 32px;
        }
        .gym-meta li {
            display: flex;
            align-items: center;
            font-size: 16px;
            color: var(--text);
            margin-bottom: 12px;
        }
        .gym-meta li i {
            color: var(--primary);
            margin-right: 12px;
            font-size: 18px;
        }
        .gym-actions {
            display: flex;
            gap: 16px;
            flex-wrap: wrap;
        }
        .primary-btn {
            background: var(--primary);
            color: #fff;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            box-shadow: var(--shadow);
        }
        .primary-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
        }
        .primary-btn.secondary {
            background: var(--text-light);
        }
        .primary-btn.secondary:hover {
            background: var(--text);
        }
        .primary-btn[data-tooltip]:after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: var(--secondary);
            color: #fff;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            margin-bottom: 8px;
        }
        .primary-btn[data-tooltip]:hover:after {
            opacity: 1;
            visibility: visible;
        }

        /* Subscriptions Section */
        .subscriptions-section, .events-section {
            padding: 80px 0;
            background: var(--background);
        }
        .section-title {
            text-align: center;
            margin-bottom: 48px;
        }
        .section-title span {
            font-size: 16px;
            color: var(--primary);
            text-transform: uppercase;
            letter-spacing: 2px;
            display: block;
            margin-bottom: 8px;
        }
        .section-title h2 {
            font-family: 'Poppins', sans-serif;
            font-size: 36px;
            font-weight: 700;
            color: var(--text);
        }
        .activity-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            margin-bottom: 24px;
        }
        .activity-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-hover);
        }
        .activity-name {
            background: linear-gradient(90deg, #333, #444);
            color: #fff;
            padding: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 12px 12px 0 0;
        }
        .activity-name i {
            font-size: 18px;
            margin-right: 8px;
        }
        .activity-name h3 {
            font-family: 'Poppins', sans-serif;
            font-size: 20px;
            font-weight: 600;
        }
        .subscriptions-container {
            padding: 20px;
            display: grid;
            gap: 16px;
        }
        .subscription-card {
            background: var(--card-bg);
            border-radius: 8px;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
        }
        .subscription-card:hover {
            transform: scale(1.02);
        }
        .subscription-header {
            padding: 16px;
            text-align: center;
            border-bottom: 1px solid #e5e7eb;
        }
        .subscription-header h4 {
            font-family: 'Poppins', sans-serif;
            font-size: 18px;
            font-weight: 600;
            color: var(--text);
        }
        .subscription-header .price {
            font-size: 20px;
            font-weight: 700;
            color: var(--primary);
            margin-top: 8px;
        }
        .subscription-body {
            padding: 16px;
        }
        .subscription-features {
            list-style: none;
            margin-bottom: 16px;
        }
        .subscription-features li {
            display: flex;
            align-items: center;
            font-size: 14px;
            color: var(--text);
            margin-bottom: 8px;
        }
        .subscription-features li i {
            color: var(--primary);
            margin-right: 8px;
        }
        .subscription-btn {
            width: 100%;
            background: var(--primary);
            color: #fff;
            padding: 10px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .subscription-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }
        .subscription-btn[data-tooltip]:after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: var(--secondary);
            color: #fff;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            margin-bottom: 8px;
        }
        .subscription-btn[data-tooltip]:hover:after {
            opacity: 1;
            visibility: visible;
        }

        /* Payment Modal */
        .payment-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        .payment-modal.active {
            opacity: 1;
            visibility: visible;
        }
        .payment-content {
            background: var(--card-bg);
            border-radius: 12px;
            max-width: 480px;
            width: 90%;
            box-shadow: var(--shadow);
            transform: translateY(20px);
            transition: transform 0.3s ease;
        }
        .payment-modal.active .payment-content {
            transform: translateY(0);
        }
        .close-modal {
            position: absolute;
            top: 16px;
            right: 16px;
            font-size: 20px;
            color: var(--text);
            cursor: pointer;
            transition: color 0.3s ease;
        }
        .close-modal:hover {
            color: var(--primary);
        }
        .payment-header {
            background: var(--primary);
            color: #fff;
            padding: 20px;
            text-align: center;
            border-radius: 12px 12px 0 0;
        }
        .payment-header h2 {
            font-family: 'Poppins', sans-serif;
            font-size: 24px;
            font-weight: 600;
        }
        .payment-header p {
            font-size: 14px;
            opacity: 0.9;
        }
        .payment-body {
            padding: 20px;
        }
        #card-element {
            border: 1px solid #d1d5db;
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 16px;
        }
        #submit {
            width: 100%;
            background: var(--primary);
            color: #fff;
            padding: 12px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }
        #submit:disabled {
            background: #d1d5db;
            cursor: not-allowed;
        }
        #submit .spinner {
            display: none;
            width: 16px;
            height: 16px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top-color: #fff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }
        #submit.processing .spinner {
            display: block;
        }
        #error-message {
            color: #dc2626;
            font-size: 14px;
            text-align: center;
            margin-top: 12px;
        }

        /* Confirmation Modal */
        .confirmation-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1001;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        .confirmation-modal.active {
            opacity: 1;
            visibility: visible;
        }
        .confirmation-content {
            background: var(--card-bg);
            border-radius: 12px;
            max-width: 420px;
            width: 90%;
            padding: 24px;
            text-align: center;
            box-shadow: var(--shadow);
            transform: translateY(20px);
            transition: transform 0.3s ease;
        }
        .confirmation-modal.active .confirmation-content {
            transform: translateY(0);
        }
        .close-confirmation {
            position: absolute;
            top: 16px;
            right: 16px;
            font-size: 20px;
            color: var(--text);
            cursor: pointer;
            transition: color 0.3s ease;
        }
        .close-confirmation:hover {
            color: var(--primary);
        }
        .confirmation-icon {
            width: 64px;
            height: 64px;
            background: #10b981;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
        }
        .confirmation-icon svg {
            width: 32px;
            height: 32px;
            fill: #fff;
        }
        .confirmation-title {
            font-family: 'Poppins', sans-serif;
            font-size: 24px;
            font-weight: 600;
            color: var(--text);
            margin-bottom: 8px;
        }
        .confirmation-qr p {
            font-size: 14px;
            color: var(--text-light);
            margin-bottom: 12px;
        }
        .confirmation-qr canvas {
            display: block;
            margin: 0 auto;
        }
        .qr-error {
            color: #dc2626;
            background: #fef2f2;
            padding: 12px;
            border-radius: 8px;
            margin: 12px 0;
        }
        .retry-btn {
            background: var(--primary);
            color: #fff;
            padding: 8px 16px;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            margin: 8px 4px;
        }
        .pdf-link {
            color: var(--primary);
            text-decoration: underline;
        }
        .confirmation-details {
            background: #f3f4f6;
            padding: 16px;
            border-radius: 8px;
            margin: 16px 0;
        }
        .confirmation-detail {
            display: flex;
            margin-bottom: 8px;
        }
        .confirmation-detail-label {
            font-weight: 500;
            color: var(--text);
            width: 100px;
        }
        .confirmation-detail-value {
            color: var(--text-light);
        }
        .confirmation-button {
            background: var(--primary);
            color: #fff;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 600;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .confirmation-button:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }

        /* Events Section */
        .event-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            margin-bottom: 24px;
        }
        .event-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-hover);
        }
        .event-pic {
            overflow: hidden;
            border-radius: 12px 12px 0 0;
        }
        .event-pic img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: transform 0.4s ease;
        }
        .event-card:hover .event-pic img {
            transform: scale(1.05);
        }
        .event-text {
            padding: 20px;
            text-align: center;
        }
        .event-text span {
            font-size: 14px;
            color: var(--primary);
            text-transform: uppercase;
            font-weight: 600;
            display: block;
            margin-bottom: 8px;
        }
        .event-text h5 {
            font-family: 'Poppins', sans-serif;
            font-size: 20px;
            font-weight: 600;
            color: var(--text);
            margin-bottom: 12px;
        }
        .event-text p {
            font-size: 14px;
            color: var(--text-light);
            line-height: 1.6;
            margin-bottom: 16px;
        }
        .event-details {
            list-style: none;
            margin-bottom: 16px;
        }
        .event-details li {
            font-size: 14px;
            color: var(--text);
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .event-details li i {
            color: var(--primary);
            margin-right: 8px;
        }
        .event-btn {
            background: var(--primary);
            color: #fff;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        .event-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }
        .event-btn[data-tooltip]:after {
            content: attr(data-tooltip);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background: var(--secondary);
            color: #fff;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            margin-bottom: 8px;
        }
        .event-btn[data-tooltip]:hover:after {
            opacity: 1;
            visibility: visible;
        }

        /* Notification Modal */
        .notification-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        .notification-modal.active {
            opacity: 1;
            visibility: visible;
        }
        .notification-content {
            background: var(--card-bg);
            border-radius: 12px;
            max-width: 420px;
            width: 90%;
            padding: 24px;
            text-align: center;
            box-shadow: var(--shadow);
            transform: translateY(20px);
            transition: transform 0.3s ease;
        }
        .notification-modal.active .notification-content {
            transform: translateY(0);
        }
        .notification-icon {
            width: 48px;
            height: 48px;
            background: var(--primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
        }
        .notification-icon i {
            color: #fff;
            font-size: 24px;
        }
        .notification-title {
            font-family: 'Poppins', sans-serif;
            font-size: 20px;
            font-weight: 600;
            color: var(--text);
            margin-bottom: 12px;
        }
        .notification-message {
            font-size: 14px;
            color: var(--text-light);
            line-height: 1.6;
            margin-bottom: 20px;
        }
        .notification-actions {
            display: flex;
            justify-content: center;
            gap: 12px;
        }
        .notification-btn {
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
        }
        .notification-btn.remind-later {
            background: var(--text-light);
            color: #fff;
        }
        .notification-btn.remind-later:hover {
            background: var(--text);
        }
        .notification-btn.cancel {
            background: var(--primary);
            color: #fff;
        }
        .notification-btn.cancel:hover {
            background: var(--primary-dark);
        }

        /* Animations */
        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .gym-content h2, .section-title h2 {
                font-size: 32px;
            }
            .event-pic img {
                height: 180px;
            }
        }
        @media (max-width: 768px) {
            .gym-details-section, .subscriptions-section, .events-section {
                padding: 60px 0;
            }
            .gym-image {
                margin-bottom: 32px;
            }
            .gym-content h2, .section-title h2 {
                font-size: 28px;
            }
            .gym-actions {
                flex-direction: column;
            }
            .subscriptions-container {
                grid-template-columns: 1fr;
            }
            .event-pic img {
                height: 160px;
            }
        }
        @media (max-width: 576px) {
            .breadcrumb-text h2 {
                font-size: 32px;
            }
            .gym-content h2, .section-title h2 {
                font-size: 24px;
            }
            .primary-btn, .subscription-btn, .event-btn {
                width: 100%;
                padding: 10px;
            }
            .activity-name h3, .subscription-header h4, .event-text h5 {
                font-size: 18px;
            }
            .notification-title {
                font-size: 18px;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Initializing payment system');

            // Initialize Stripe
            const stripe = Stripe('{{ stripe_public_key|escape('js') }}');
            const elements = stripe.elements();
            const card = elements.create('card', {
                style: {
                    base: {
                        fontSize: '16px',
                        color: '#1F2937',
                        '::placeholder': { color: '#9CA3AF' },
                    },
                }
            });

            // DOM Elements
            const paymentModal = document.getElementById('payment-modal');
            const closeModal = document.querySelector('.close-modal');
            const paymentForm = document.getElementById('payment-form');
            const submitButton = document.getElementById('submit');
            const errorMessage = document.getElementById('error-message');
            const confirmationModal = document.getElementById('confirmation-modal');
            const closeConfirmation = document.querySelector('.close-confirmation');
            const confirmationButton = document.getElementById('confirmation-button');
            const paymentAmount = document.getElementById('payment-amount');
            const confirmationQrContainer = document.querySelector('.confirmation-qr');
            const confirmationType = document.getElementById('confirmation-type');
            const confirmationActivity = document.getElementById('confirmation-activity');
            const confirmationStart = document.getElementById('confirmation-start');
            const confirmationEnd = document.getElementById('confirmation-end');
            const subscriptionButtons = document.querySelectorAll('.subscription-btn');

            // State variables
            let currentAbonnementId = null;
            let currentAmount = null;
            let currentType = null;
            let currentActivity = null;
            let paymentIntentId = null;

            // Helper function to format dates
            function formatDate(date) {
                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                return date.toLocaleDateString('fr-FR', options);
            }

            // Show payment modal
            function showPaymentModal(errorMsg = '') {
                console.log('Showing payment modal for abonnement:', currentAbonnementId);
                if (!card._complete) {
                    card.mount('#card-element');
                }
                paymentModal.classList.add('active');
                errorMessage.textContent = errorMsg;
            }

            // Close payment modal
            function closePaymentModal() {
                paymentModal.classList.remove('active');
                if (card._complete) {
                    card.unmount();
                }
                paymentForm.reset();
                errorMessage.textContent = '';
            }

            function showQrCode() {
                console.log('Generating QR code for abonnement:', currentAbonnementId);
                
                // Clear previous QR code
                confirmationQrContainer.innerHTML = '';
                
                if (!currentAbonnementId) {
                    showQrError('ID d\'abonnement manquant');
                    return;
                }

                // Utilisez une URL absolue pour le QR code
const pdfUrl = 'http://192.168.0.181:8000{{ path('abonnement_confirmation_pdf', {'id': 'ABON_ID'}) }}'
    .replace('ABON_ID', currentAbonnementId);

                try {
                    // Create QR code
                    const qrCode = new QRCode(confirmationQrContainer, {
                        text: pdfUrl,
                        width: 150,
                        height: 150,
                        colorDark: "#000000",
                        colorLight: "#ffffff",
                        correctLevel: QRCode.CorrectLevel.H
                    });

                    // Ajoutez un message explicatif
                    const info = document.createElement('p');
                    info.textContent = 'Scannez ce QR code pour t√©l√©charger votre confirmation';
                    info.style.marginTop = '10px';
                    info.style.fontFamily = 'Inter, sans-serif';
                    info.style.textAlign = 'center';
                    confirmationQrContainer.appendChild(info);

                } catch (error) {
                    console.error('QR code generation error:', error);
                    showQrError('Erreur de g√©n√©ration du QR code');
                }
            }

            // Show error message
            function showQrError(message) {
                confirmationQrContainer.innerHTML = `
                    <div class="qr-error">
                        <p>${message}</p>
                        <button class="retry-btn">R√©essayer</button>
                        <a href="/abonnement/${currentAbonnementId}/confirmation/pdf" class="pdf-link">
                            T√©l√©charger le PDF
                        </a>
                    </div>
                `;

                // Add retry button handler
                confirmationQrContainer.querySelector('.retry-btn').addEventListener('click', showQrCode);
            }

            // Handle subscription button clicks
            subscriptionButtons.forEach(button => {
                button.addEventListener('click', async (e) => {
                    e.preventDefault();
                    
                    if (button.disabled) return;
                    button.disabled = true;
                    button.textContent = 'Traitement...';

                    // Store subscription data
                    currentAbonnementId = button.dataset.abonnementId;
                    currentAmount = parseFloat(button.dataset.abonnementTarif);
                    currentType = button.dataset.abonnementType;
                    currentActivity = button.dataset.abonnementActivite;
                    paymentAmount.textContent = currentAmount.toFixed(2);

                    console.log('Starting payment for abonnement:', currentAbonnementId);

                    try {
                        // Create payment intent
                        const response = await fetch('/api/stripe/payment-intent', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                amount: Math.round(currentAmount * 100), // in cents
                                currency: 'usd',
                                metadata: { abonnement_id: currentAbonnementId }
                            }),
                        });

                        const data = await response.json();
                        
                        if (data.error) {
                            throw new Error(data.error);
                        }

                        paymentIntentId = data.paymentIntentId;
                        showPaymentModal();
                    } catch (error) {
                        console.error('Payment error:', error);
                        showPaymentModal(error.message);
                    } finally {
                        button.disabled = false;
                        button.textContent = 'S\'abonner';
                    }
                });
            });

            // Handle payment form submission
            paymentForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                submitButton.disabled = true;
                submitButton.classList.add('processing');
                errorMessage.textContent = '';

                try {
                    // Create payment method
                    const { paymentMethod, error } = await stripe.createPaymentMethod({
                        type: 'card',
                        card: card,
                        billing_details: {
                            name: '{{ app.user.prenom }} {{ app.user.nom }}',
                        },
                    });

                    if (error) {
                        throw error;
                    }

                    // Confirm payment
                    const confirmResponse = await fetch('/api/stripe/payment-intent/confirm', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            paymentIntentId: paymentIntentId,
                            paymentMethodId: paymentMethod.id,
                            abonnementId: currentAbonnementId,
                            amount: Math.round(currentAmount * 100),
                            currency: 'usd'
                        }),
                    });

                    const confirmData = await confirmResponse.json();
                    
                    if (confirmData.error) {
                        throw new Error(confirmData.error);
                    }

                    // Payment succeeded
                    if (confirmData.status === 'succeeded') {
                        console.log('Payment succeeded for abonnement:', currentAbonnementId);
                        
                        // Set confirmation details
                        confirmationType.textContent = currentType;
                        confirmationActivity.textContent = currentActivity;
                        confirmationStart.textContent = formatDate(new Date());
                        
                        // Calculate end date
                        const endDate = new Date();
                        switch (currentType.toLowerCase()) {
                            case 'mois': endDate.setMonth(endDate.getMonth() + 1); break;
                            case 'trimestre': endDate.setMonth(endDate.getMonth() + 3); break;
                            case 'ann√©e': endDate.setFullYear(endDate.getFullYear() + 1); break;
                            default: endDate.setMonth(endDate.getMonth() + 1);
                        }
                        confirmationEnd.textContent = formatDate(endDate);

                        // Show QR code
                        showQrCode();
                        
                        // Close payment modal and show confirmation
                        closePaymentModal();
                        confirmationModal.classList.add('active');
                    } else {
                        throw new Error('Paiement non compl√©t√©: ' + confirmData.status);
                    }
                } catch (error) {
                    console.error('Payment processing error:', error);
                    errorMessage.textContent = error.message;
                } finally {
                    submitButton.disabled = false;
                    submitButton.classList.remove('processing');
                }
            });

            // Close modal handlers
            closeModal.addEventListener('click', closePaymentModal);
            closeConfirmation.addEventListener('click', () => {
                confirmationModal.classList.remove('active');
            });
            confirmationButton.addEventListener('click', () => {
                confirmationModal.classList.remove('active');
                window.location.href = '{{ path('sportif_abonnements') }}';
            });

            // Close modals when clicking outside
            window.addEventListener('click', (e) => {
                if (e.target === paymentModal) closePaymentModal();
                if (e.target === confirmationModal) confirmationModal.classList.remove('active');
            });
        });
    </script>
{% endblock %}