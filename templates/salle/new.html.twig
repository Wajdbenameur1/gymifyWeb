{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}Add New Gym Room{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <style>
        :root {
            --primary: #7c3aed; /* Violet vibrant */
            --secondary: #f472b6; /* Rose vif */
            --accent: #22d3ee; /* Cyan éclatant */
            --dark: #1e1b4b; /* Bleu profond */
            --light: #ffffff; /* Blanc pur */
            --shadow: rgba(124, 58, 237, 0.3);
            --glow: rgba(124, 58, 237, 0.5);
        }

        /* Override the search bar background */
        .search-bar-container {
            background: var(--light) !important;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            padding: 1rem;
        }

        .container-fluid {
            padding: 2rem;
            background: var(--light);
            min-height: 100vh;
            position: relative;
        }

        .form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            background: var(--light);
        }

        .btn-back {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-family: 'Nunito', sans-serif;
            font-weight: 600;
            font-size: 0.8rem;
            text-transform: uppercase;
            transition: all 0.4s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
            cursor: pointer;
            background: var(--accent);
 =           color: white;
        }

        .btn-back:hover {
            background: #06b6d4;
            transform: scale(1.05);
            box-shadow: 0 5px 15px var(--glow);
        }

        .form-title-wrapper {
            flex-grow: 1;
            text-align: center;
        }

        .form-title {
            font-family: 'Orbitron', sans-serif;
            font-weight: 700;
            font-size: 2.2rem;
            color: var(--dark);
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 0 0 10px var(--glow);
            animation: neonText 2s infinite alternate;
        }

        @keyframes neonText {
            0% { text-shadow: 0 0 5px var(--glow), 0 0 10px var(--primary); }
            100% { text-shadow: 0 0 15px var(--glow), 0 0 20px var(--primary); }
        }

        .form-subtitle {
            font-family: 'Nunito', sans-serif;
            font-weight: 400;
            font-size: 1.1rem;
            color: #64748b;
            margin-top: 0.5rem;
        }

        .form-container {
            background: linear-gradient(135deg, var(--dark) 0%, #3730a3 50%, var(--primary) 100%);
            border-radius: 20px;
            box-shadow: 0 10px 30px var(--shadow);
            padding: 2.5rem;
            margin: 2rem 0;
            position: relative;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            overflow: hidden;
        }

        .form-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(124, 58, 237, 0.2), transparent 70%);
            animation: pulseGlow 8s infinite ease-in-out;
            z-index: 0;
        }

        @keyframes pulseGlow {
            0%, 100% { transform: scale(1); opacity: 0.8; }
            50% { transform: scale(1.1); opacity: 1; }
        }

        .form-group {
            margin-bottom: 1.75rem;
            position: relative;
            z-index: 1;
        }

        .form-label {
            font-family: 'Nunito', sans-serif;
            font-weight: 600;
            font-size: 1rem;
            color: white;
            margin-bottom: 0.5rem;
            display: block;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-control {
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 0.9rem 1.2rem;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            transition: all 0.3s ease;
            width: 100%;
            font-family: 'Nunito', sans-serif;
            font-size: 1rem;
        }

        .form-control:focus {
            border-color: var(--accent);
            box-shadow: 0 0 10px var(--glow);
            background: rgba(255, 255, 255, 0.15);
            outline: none;
        }

        textarea.form-control {
            min-height: 140px;
            resize: vertical;
        }

        .form-image-preview {
            max-width: 250px;
            border-radius: 12px;
            margin-top: 1rem;
            display: none;
            border: 2px dashed rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }

        .form-row {
            display: flex;
            gap: 2rem;
            margin-bottom: 1.75rem;
        }

        .form-col {
            flex: 1;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
            padding: 1rem;
            background: var(--light);
            border-radius: 0 0 20px 20px;
            box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-submit, .btn-cancel {
            padding: 0.9rem 2rem;
            border-radius: 12px;
            font-family: 'Nunito', sans-serif;
            font-weight: 700;
            font-size: 1rem;
            text-transform: uppercase;
            transition: all 0.4s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            border: none;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            flex: 1;
            justify-content: center;
        }

        .btn-submit {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            box-shadow: 0 5px 15px var(--shadow);
        }

        .btn-submit:hover {
            background: linear-gradient(45deg, var(--secondary), var(--accent));
            transform: scale(1.05);
            box-shadow: 0 10px 25px var(--glow);
        }

        .btn-cancel {
            background: rgba(0, 0, 0, 0.1);
            color: var(--dark);
            box-shadow: 0 5px 15px var(--shadow);
        }

        .btn-cancel:hover {
            background: rgba(0, 0, 0, 0.2);
            transform: scale(1.05);
            box-shadow: 0 10px 25px var(--shadow);
        }

        #address-results {
            position: absolute;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.9);
            width: calc(100% - 2.4rem);
            border-radius: 12px;
            max-height: 200px;
            overflow-y: auto;
            box-shadow: 0 10px 20px var(--shadow);
            display: none;
            margin-top: 0.5rem;
        }

        .address-item {
            padding: 0.75rem 1.2rem;
            cursor: pointer;
            font-family: 'Nunito', sans-serif;
            color: var(--dark);
            transition: all 0.3s ease;
        }

        .address-item:hover {
            background: var(--accent);
            color: white;
        }

        #map-container {
            margin-top: 1.5rem;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 10px 30px var(--shadow);
        }

        #map {
            height: 400px;
            width: 100%;
        }

        .map-title {
            font-family: 'Nunito', sans-serif;
            font-weight: 700;
            font-size: 1.1rem;
            color: white;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
        }

        .map-instructions {
            font-family: 'Nunito', sans-serif;
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .location-notice {
            font-family: 'Nunito', sans-serif;
            color: #f472b6;
            font-size: 0.95rem;
            margin-top: 0.5rem;
        }

        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .form-col {
                margin-bottom: 1.75rem;
            }

            .form-title {
                font-size: 1.8rem;
            }

            .button-group {
                flex-direction: column;
                gap: 0.75rem;
            }
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Nunito:wght@300;400;700&display=swap" rel="stylesheet">
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="form-header">
            <a href="{{ path('admin_salle_index') }}" class="btn-back">
                <i class="fas fa-arrow-left"></i> Back
            </a>
            <div class="form-title-wrapper">
                <h1 class="form-title">Add Gym Room</h1>
                <p class="form-subtitle">Fill in the form to create a new gym room</p>
            </div>
            <div style="width: 60px;"></div> <!-- Spacer pour équilibrer -->
        </div>

        <div class="form-container">
            {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
            
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        {{ form_label(form.nom, "Name") }}
                        {{ form_widget(form.nom) }}
                        {{ form_errors(form.nom) }}
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        {{ form_label(form.num_tel, "Phone Number") }}
                        {{ form_widget(form.num_tel) }}
                        {{ form_errors(form.num_tel) }}
                    </div>
                </div>
            </div>
                
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        {{ form_label(form.email, "Email") }}
                        {{ form_widget(form.email) }}
                        {{ form_errors(form.email) }}
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        {{ form_label(form.responsable, "Manager") }}
                        {{ form_widget(form.responsable) }}
                        {{ form_errors(form.responsable) }}
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                {{ form_label(form.details, "Details") }}
                {{ form_widget(form.details) }}
                {{ form_errors(form.details) }}
            </div>
            
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        {{ form_label(form.image, "Image") }}
                        {{ form_widget(form.image) }}
                        {{ form_errors(form.image) }}
                        <img id="imagePreview" class="form-image-preview" alt="Image Preview">
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                {{ form_label(form.adresse, "Address") }}
                {{ form_widget(form.adresse, {'attr': {'id': 'salle_adresse', 'autocomplete': 'off'}}) }}
                {{ form_errors(form.adresse) }}
                <div id="address-results"></div>
                
                <div class="mt-3">
                    <p class="map-title">Room Location</p>
                    <p class="map-instructions">Search for an address or click on the map to set the location</p>
                    <p class="location-notice">Adjust the marker if the initial location isn’t correct.</p>
                    <div id="map-container">
                        <div id="map"></div>
                    </div>
                </div>
            </div>
            
            <div class="button-group">
                <button type="submit" class="btn-submit">
                    <i class="fas fa-save"></i> Save Room
                </button>
                <button type="reset" class="btn-cancel">
                    <i class="fas fa-times"></i> Cancel
                </button>
            </div>
            
            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const addressInput = document.getElementById('salle_adresse');
            const addressResults = document.getElementById('address-results');
            
            const map = L.map('map').setView([34, 9], 6);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            let marker = null;
            
            function placeMarker(lat, lng, address) {
                if (marker) map.removeLayer(marker);
                marker = L.marker([lat, lng]).addTo(map)
                    .bindPopup(address)
                    .openPopup();
                map.setView([lat, lng], 16);
                addressInput.value = address;
            }

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    position => {
                        const lat = position.coords.latitude;
                        const lng = position.coords.longitude;
                        fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                            .then(response => response.json())
                            .then(data => {
                                const address = data.display_name || "Address not available";
                                placeMarker(lat, lng, address);
                            })
                            .catch(error => {
                                console.error('Reverse geocoding error:', error);
                                placeMarker(lat, lng, "Address not available");
                            });
                    },
                    error => console.error("Geolocation error:", error.message),
                    { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
                );
            }

            map.on('click', function(e) {
                const { lat, lng } = e.latlng;
                fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                    .then(response => response.json())
                    .then(data => {
                        const address = data.display_name || "Address not available";
                        placeMarker(lat, lng, address);
                    })
                    .catch(error => {
                        console.error('Reverse geocoding error:', error);
                        placeMarker(lat, lng, "Address not available");
                    });
            });

            function searchAddress(query) {
                if (query.length < 3) {
                    addressResults.style.display = 'none';
                    return;
                }
                fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&countrycodes=tn&limit=5`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            addressResults.innerHTML = '';
                            data.forEach(item => {
                                const div = document.createElement('div');
                                div.className = 'address-item';
                                div.textContent = item.display_name;
                                div.addEventListener('click', () => {
                                    addressInput.value = item.display_name;
                                    addressResults.style.display = 'none';
                                    placeMarker(parseFloat(item.lat), parseFloat(item.lon), item.display_name);
                                });
                                addressResults.appendChild(div);
                            });
                            addressResults.style.display = 'block';
                        } else {
                            addressResults.style.display = 'none';
                        }
                    })
                    .catch(error => console.error('Search error:', error));
            }

            let timeout;
            addressInput.addEventListener('input', function() {
                clearTimeout(timeout);
                timeout = setTimeout(() => searchAddress(this.value), 300);
            });

            document.addEventListener('click', function(e) {
                if (e.target !== addressInput && !addressResults.contains(e.target)) {
                    addressResults.style.display = 'none';
                }
            });

            function previewImage(input) {
                const preview = document.getElementById('imagePreview');
                const file = input.files[0];
                if (file) {
                    const validTypes = ['image/jpeg', 'image/png', 'image/webp'];
                    if (!validTypes.includes(file.type)) {
                        alert('Please select a valid image (JPEG, PNG, or WebP)');
                        input.value = '';
                        preview.style.display = 'none';
                        return;
                    }
                    if (file.size > 2 * 1024 * 1024) {
                        alert('Image must not exceed 2MB');
                        input.value = '';
                        preview.style.display = 'none';
                        return;
                    }
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                } else {
                    preview.style.display = 'none';
                }
            }

            document.querySelector('[name="salle[image]"]').addEventListener('change', function() {
                previewImage(this);
            });
        });
    </script>
{% endblock %}