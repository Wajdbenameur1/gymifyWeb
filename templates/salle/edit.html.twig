{% extends 'admin/homepageadmin.html.twig' %}

{% block title %}Add New Gym Room{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <style>
        :root {
            --primary-color: #667eea;
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-color: #6c757d;
            --light-bg: #f8f9fa;
            --danger-color: #dc3545;
        }
        
        .container-fluid {
            max-width: 1400px;
            padding: 1.5rem 1rem;
        }
        
        .text-gradient {
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .bg-gradient-primary {
            background: var(--primary-gradient);
        }
        
        .card {
            border-radius: 1rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background: rgba(255, 255, 255, 0.95);
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .floating-label-group {
            position: relative;
            margin-bottom: 1.5rem;
        }
        
        .floating-input {
            position: relative;
            z-index: 2;
            background: #fff;
            padding-top: 1.25rem;
            padding-bottom: 0.75rem;
        }
        
        .floating-input:focus ~ .floating-label,
        .floating-input:not(:placeholder-shown) ~ .floating-label {
            top: -8px;
            left: 12px;
            font-size: 0.75rem;
            background: #fff;
            padding: 0 4px;
            color: var(--primary-color);
            font-weight: 500;
            z-index: 1;
        }
        
        .floating-label {
            position: absolute;
            top: 50%;
            left: 15px;
            transform: translateY(-50%);
            transition: all 0.2s ease;
            color: var(--secondary-color);
            pointer-events: none;
            z-index: 1;
        }
        
        .form-control, .form-select {
            border-radius: 0.5rem;
            height: 50px;
            padding: 1.25rem 1rem 0.75rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.2);
        }
        
        .form-control.is-valid {
            border-color: #28a745;
            background-image: none;
        }
        
        .form-control.is-valid:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }
        
        .form-select.is-valid {
            border-color: #28a745;
        }
        
        .form-select.is-valid:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }
        
        .invalid-feedback {
            font-size: 0.875rem;
            color: var(--danger-color);
            margin-top: 0.25rem;
            position: relative;
            display: none;
        }
        
        .is-invalid ~ .invalid-feedback {
            display: block;
        }
        
        .btn-primary {
            background: var(--primary-gradient);
            border: none;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }
        
        .btn-outline-primary {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }
        
        .btn-outline-primary:hover {
            background-color: rgba(102, 126, 234, 0.1);
        }
        
        .preview-image {
            width: 120px;
            height: 120px;
            display: none;
            border: 2px solid #fff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            border-radius: 50%;
        }
        
        .remove-image-btn {
            width: 28px;
            height: 28px;
            display: none;
            top: 0;
            right: calc(50% - 60px);
            border: 2px solid #fff;
            border-radius: 50%;
            position: absolute;
            background-color: #dc3545;
            color: white;
            font-size: 14px;
            line-height: 1;
            align-items: center;
            justify-content: center;
        }
        
        .remove-image-btn:hover {
            background-color: #c82333;
        }
        
        .upload-btn {
            transition: all 0.2s ease;
            border-radius: 0.5rem;
        }
        
        .upload-btn:hover {
            background-color: var(--primary-color);
            color: #fff;
        }
        
        .floating-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            min-width: 300px;
            animation: slideIn 0.5s forwards;
        }
        
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        #map-container {
            margin-top: 1.5rem;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        
        #map {
            height: 400px;
            width: 100%;
        }
        
        #address-results {
            position: absolute;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.95);
            width: calc(100% - 2rem);
            border-radius: 8px;
            max-height: 200px;
            overflow-y: auto;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            display: none;
            margin-top: 0.5rem;
        }
        
        .address-item {
            padding: 0.75rem 1rem;
            cursor: pointer;
            font-family: 'Nunito', sans-serif;
            color: #2d3748;
            transition: all 0.3s ease;
        }
        
        .address-item:hover {
            background: var(--primary-color);
            color: white;
        }
        
        @media (max-width: 576px) {
            .card-body {
                padding: 1.5rem;
            }
            .btn-lg {
                padding: 0.5rem 1rem;
                font-size: 1rem;
            }
            .preview-image {
                width: 100px;
                height: 100px;
            }
            .floating-alert {
                min-width: 90%;
                right: 5%;
            }
            .form-control, .form-select {
                height: 46px;
                padding: 1rem 0.75rem 0.5rem;
            }
            .floating-input:focus ~ .floating-label,
            .floating-input:not(:placeholder-shown) ~ .floating-label {
                top: -7px;
                font-size: 0.7rem;
                padding: 0 3px;
            }
            .remove-image-btn {
                right: calc(50% - 50px);
            }
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Nunito:wght@300;400;700&display=swap" rel="stylesheet">
{% endblock %}

{% block body %}
    <div class="container-fluid px-4 py-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="fw-bold text-gradient">
                <i class="fas fa-plus me-2"></i>Add New Gym Room
            </h1>
            <a href="{{ path('admin_salle_index') }}" class="btn btn-outline-secondary rounded-pill hover-scale">
                <i class="fas fa-arrow-left me-2"></i>Back to List
            </a>
        </div>

        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb bg-white p-3 rounded-3 shadow-sm">
                <li class="breadcrumb-item"><a href="{{ path('app_admin') }}" class="text-decoration-none"><i class="fas fa-home me-1"></i> Dashboard</a></li>
                <li class="breadcrumb-item"><a href="{{ path('admin_salle_index') }}" class="text-decoration-none"><i class="fas fa-dumbbell me-1"></i> Gym Rooms</a></li>
                <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-plus me-1"></i> Add</li>
            </ol>
        </nav>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show shadow-sm floating-alert" role="alert">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-{{ label == 'success' ? 'check-circle' : 'exclamation-triangle' }} me-2"></i>
                        <span>{{ message }}</span>
                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
            {% endfor %}
        {% endfor %}

        <div class="card border-0 shadow-sm overflow-hidden rounded-4">
            <div class="card-header bg-gradient-primary text-white py-3 d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-dumbbell me-2"></i>New Gym Room Form
                </h5>
                <div class="badge bg-white text-primary rounded-pill">
                    <i class="fas fa-info-circle me-1"></i> Required Fields (*)
                </div>
            </div>
            <div class="card-body p-4 p-md-5 bg-light">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': '', 'id': 'gym-form'}}) }}
                
                <div class="row g-4 mb-4">
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control floating-input' ~ (form.nom.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Name'}}) }}
                            {{ form_label(form.nom, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.num_tel, {'attr': {'class': 'form-control floating-input' ~ (form.num_tel.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Phone Number'}}) }}
                            {{ form_label(form.num_tel, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.num_tel) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-4 mb-4">
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.email, {'attr': {'class': 'form-control floating-input' ~ (form.email.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Email'}}) }}
                            {{ form_label(form.email, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.email) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating floating-label-group">
                            {{ form_widget(form.responsable, {'attr': {'class': 'form-select floating-input' ~ (form.responsable.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Manager'}}) }}
                            {{ form_label(form.responsable, null, {'label_attr': {'class': 'floating-label'}}) }}
                            <div class="invalid-feedback animated-feedback">
                                {{ form_errors(form.responsable) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-floating mb-4 floating-label-group">
                    {{ form_widget(form.details, {'attr': {'class': 'form-control floating-input' ~ (form.details.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Details'}}) }}
                    {{ form_label(form.details, null, {'label_attr': {'class': 'floating-label'}}) }}
                    <div class="invalid-feedback animated-feedback">
                        {{ form_errors(form.details) }}
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold d-flex align-items-center">
                        <i class="fas fa-camera me-2"></i> Room Image
                        <span class="badge bg-secondary-subtle text-secondary ms-2">Optional</span>
                    </label>
                    <div class="image-upload-wrapper">
                        <button type="button" class="btn btn-outline-primary rounded-pill mb-3 upload-btn">
                            <i class="fas fa-upload me-2"></i>Upload Image
                        </button>
                        {{ form_widget(form.image, {'attr': {'class': 'd-none', 'accept': 'image/jpeg,image/png,image/webp'}}) }}
                        <div class="text-center position-relative">
                            <img id="image-preview" class="rounded-circle shadow object-fit-cover preview-image" alt="Image Preview">
                            <button id="remove-image" class="btn btn-danger btn-sm rounded-circle position-absolute remove-image-btn">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="form-text text-muted mt-2">
                            Accepted formats: JPG, PNG, WebP (max 2MB)
                        </div>
                        <div class="invalid-feedback animated-feedback" id="image-error">
                            {{ form_errors(form.image) }}
                        </div>
                    </div>
                </div>

                <div class="form-floating mb-4 floating-label-group">
                    {{ form_widget(form.adresse, {'attr': {'id': 'salle_adresse', 'autocomplete': 'off', 'class': 'form-control floating-input' ~ (form.adresse.vars.errors|length ? ' is-invalid' : ''), 'placeholder': 'Address'}}) }}
                    {{ form_label(form.adresse, null, {'label_attr': {'class': 'floating-label'}}) }}
                    <div class="invalid-feedback animated-feedback">
                        {{ form_errors(form.adresse) }}
                    </div>
                    <div id="address-results"></div>
                </div>

                <div class="mb-4">
                    <p class="fw-semibold">Room Location</p>
                    <p class="form-text text-muted">Search for an address or click on the map to set the location</p>
                    <div id="map-container">
                        <div id="map"></div>
                    </div>
                </div>

                <div class="d-flex justify-content-end mt-5">
                    <button type="submit" class="btn btn-primary btn-lg rounded-pill px-4 py-2 shadow-sm hover-scale">
                        <i class="fas fa-save me-2"></i>Save Room
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Map and address search functionality
            const addressInput = document.getElementById('salle_adresse');
            const addressResults = document.getElementById('address-results');
            const form = document.querySelector('#gym-form');
            
            const map = L.map('map').setView([34, 9], 6);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            let marker = null;
            
            function placeMarker(lat, lng, address) {
                if (marker) map.removeLayer(marker);
                marker = L.marker([lat, lng]).addTo(map)
                    .bindPopup(address)
                    .openPopup();
                map.setView([lat, lng], 16);
                addressInput.value = address;
                validateField(addressInput);
            }

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    position => {
                        const lat = position.coords.latitude;
                        const lng = position.coords.longitude;
                        fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                            .then(response => response.json())
                            .then(data => {
                                const address = data.display_name || "Address not available";
                                placeMarker(lat, lng, address);
                            })
                            .catch(error => {
                                console.error('Reverse geocoding error:', error);
                                placeMarker(lat, lng, "Address not available");
                            });
                    },
                    error => console.error("Geolocation error:", error.message),
                    { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
                );
            }

            map.on('click', function(e) {
                const { lat, lng } = e.latlng;
                fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                    .then(response => response.json())
                    .then(data => {
                        const address = data.display_name || "Address not available";
                        placeMarker(lat, lng, address);
                    })
                    .catch(error => {
                        console.error('Reverse geocoding error:', error);
                        placeMarker(lat, lng, "Address not available");
                    });
            });

            function searchAddress(query) {
                if (query.length < 3) {
                    addressResults.style.display = 'none';
                    return;
                }
                fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&countrycodes=tn&limit=5`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            addressResults.innerHTML = '';
                            data.forEach(item => {
                                const div = document.createElement('div');
                                div.className = 'address-item';
                                div.textContent = item.display_name;
                                div.addEventListener('click', () => {
                                    addressInput.value = item.display_name;
                                    addressResults.style.display = 'none';
                                    placeMarker(parseFloat(item.lat), parseFloat(item.lon), item.display_name);
                                    validateField(addressInput);
                                });
                                addressResults.appendChild(div);
                            });
                            addressResults.style.display = 'block';
                        } else {
                            addressResults.style.display = 'none';
                        }
                    })
                    .catch(error => console.error('Search error:', error));
            }

            let timeout;
            addressInput.addEventListener('input', function() {
                clearTimeout(timeout);
                timeout = setTimeout(() => searchAddress(this.value), 300);
            });

            document.addEventListener('click', function(e) {
                if (e.target !== addressInput && !addressResults.contains(e.target)) {
                    addressResults.style.display = 'none';
                }
            });

            // AJAX validation function
            function validateField(input) {
                // Skip validation for CSRF token input
                if (input.name.includes('_token')) return;

                const fieldName = input.name.split('[')[1].split(']')[0];
                const formData = new FormData();
                if (input.type === 'file' && input.files[0]) {
                    formData.append(`salle[${fieldName}]`, input.files[0]);
                } else {
                    formData.append(`salle[${fieldName}]`, input.value);
                }
                formData.append('_token', form.querySelector('[name="salle[_token]"]').value);

                fetch('{{ path('admin_salle_validate_new') }}', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    const feedback = input.parentElement.querySelector('.invalid-feedback') || 
                                    input.closest('.image-upload-wrapper')?.querySelector('.invalid-feedback');
                    input.classList.remove('is-valid', 'is-invalid');
                    if (feedback) feedback.innerHTML = '';

                    if (data.errors && data.errors[fieldName]) {
                        input.classList.add('is-invalid');
                        if (feedback) {
                            feedback.innerHTML = data.errors[fieldName].join('<br>');
                        }
                    } else if (input.value.trim() !== '' || input.type === 'file' || fieldName === 'responsable') {
                        input.classList.add('is-valid');
                    }
                })
                .catch(error => {
                    console.error('Validation error:', error);
                    const feedback = input.parentElement.querySelector('.invalid-feedback') || 
                                    input.closest('.image-upload-wrapper')?.querySelector('.invalid-feedback');
                    if (feedback) {
                        feedback.innerHTML = 'Server validation error. Please try again.';
                        input.classList.add('is-invalid');
                    }
                });
            }

            // Debounce function to limit AJAX calls
            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Attach validation to inputs
            const inputs = form.querySelectorAll('input:not([type="hidden"]), textarea, select');
            inputs.forEach(input => {
                const debouncedValidate = debounce(validateField, 300);
                input.addEventListener('input', () => debouncedValidate(input));
                input.addEventListener('blur', () => validateField(input));
                input.addEventListener('change', () => validateField(input));
            });

            // Image upload functionality
            const imageInput = document.querySelector('[name="salle[image]"]');
            const imagePreview = document.querySelector('#image-preview');
            const removeImageBtn = document.querySelector('#remove-image');
            const uploadBtn = document.querySelector('.upload-btn');
            const imageError = document.querySelector('#image-error');

            uploadBtn.addEventListener('click', () => imageInput.click());

            imageInput.addEventListener('change', function() {
                const file = this.files[0];
                if (file) {
                    const validImageTypes = ['image/jpeg', 'image/png', 'image/webp'];
                    if (!validImageTypes.includes(file.type)) {
                        imageError.textContent = 'Please upload a valid image (JPEG, PNG, WebP).';
                        imageError.style.display = 'block';
                        imageInput.classList.add('is-invalid');
                        return;
                    }
                    if (file.size > 2 * 1024 * 1024) {
                        imageError.textContent = 'The image must not exceed 2MB.';
                        imageError.style.display = 'block';
                        imageInput.classList.add('is-invalid');
                        return;
                    }
                    updateImagePreview(file);
                    validateField(imageInput);
                    imageError.style.display = 'none';
                }
            });

            function updateImagePreview(file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    removeImageBtn.style.display = 'flex';
                    imageError.style.display = 'none';
                };
                reader.readAsDataURL(file);
            }

            removeImageBtn.addEventListener('click', function(e) {
                e.preventDefault();
                imageInput.value = '';
                imagePreview.style.display = 'none';
                removeImageBtn.style.display = 'none';
                imageError.style.display = 'none';
                imageInput.classList.remove('is-valid', 'is-invalid');
            });

            // Form submission handling
            form.addEventListener('submit', function(event) {
                inputs.forEach(input => validateField(input));
                const firstError = form.querySelector('.is-invalid');
                if (firstError) {
                    event.preventDefault();
                    event.stopPropagation();
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
                form.classList.add('was-validated');
            });
        });
    </script>
{% endblock %}