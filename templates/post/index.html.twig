{% extends 'sportifdashboard/homepagesportif.html.twig' %}

{% block title %}Post index{% endblock %}

{% block stylesheet %}
<link rel="stylesheet" href="{{ asset('css/post-style.css') }}">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

{% endblock %}

{% block body %}


<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item">Blogs</li>
    <li class="breadcrumb-item active" aria-current="page"><a href="#">Home</a></li>
  </ol>
</nav>


<h1 class="mb-4">Posts</h1>

<a href="{{ path('app_post_new') }}" class="btn btn-success btn-rounded">
  Create new post
</a>
<br> <br>
<div class="container">
  <div class="row">
    {% for post in posts %}
      <div class="col-12 col-md-6 mb-4">
        <div class="card card-post card-round h-100">
          {# Image du post s’il y en a #}
          {% if post.imageUrl %}
            <img 
              class="card-img-top" 
              src="{{ asset(post.webPath) }}" 
              alt="Image du post {{ post.title }}"
            />
          {% endif %}

          <div class="card-body d-flex flex-column">
            <div class="d-flex align-items-center mb-2">
              {# Avatar de l’utilisateur #}
              <div class="avatar">
                <img
                  src="{{ post.user.imageUrl
                           ? asset(post.user.imageUrl)
                           : asset('img/screen/user.png') }}"
                  alt="Avatar de {{ post.user.nom }}"
                  class="avatar-img rounded-circle"
                />
              </div>
              <div class="info-post ms-2">
                <p class="username mb-0">{{ post.user.nom }}</p>
                <p class="date text-muted mb-0">
                  {{ post.createdAt ? post.createdAt|date('d M Y') : '—' }}
                </p>
              </div>
            </div>

            <div class="separator-solid mb-2"></div>

            <p class="card-category text-info mb-1">
              <a href="#">new</a>
            </p>

            <h5 class="card-title">
              <a href="{{ path('app_post_show', { id: post.id }) }}">
                {{ post.title }}
              </a>
            </h5>

            <p class="card-text flex-grow-1">
              {# Affichage du contenu avec HTML rendu #}
              {{ post.content|raw }} {# Assurez-vous que `post.content` est bien stocké comme du HTML valide #}
            </p>

            <div class="mt-auto">
              <a href="{{ path('app_post_show', { id: post.id }) }}" class="btn btn-primary">
                  Show
              </a>
          
              <button 
                  type="button" 
                  class="btn btn-primary" 
                  data-bs-toggle="modal" 
                  data-bs-target="#commentsModal{{ post.id }}">
                  {{ post.comments|length }} Commentaires
              </button>





















             <!-- Modal Bootstrap pour les commentaires version Instagram -->
<div class="modal fade" id="commentsModal{{ post.id }}" tabindex="-1" aria-labelledby="commentsModalLabel{{ post.id }}" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header border-0">
        <h5 class="modal-title" id="commentsModalLabel{{ post.id }}">Commentaires</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body d-flex flex-column" style="max-height: 500px; overflow-y: auto;">
        <!-- Liste des commentaires -->
        {% for comment in post.comments %}
          <div class="d-flex align-items-start mb-3">
            <img 
              src="{{ comment.user.imageUrl 
                       ? asset(comment.user.imageUrl) 
                       : asset('img/screen/user.png') }}" 
              alt="Avatar de {{ comment.user.nom }}" 
              class="rounded-circle me-3" 
              style="width: 40px; height: 40px; object-fit: cover;"
            >
            <div>
              <strong>{{ comment.user.nom }}</strong>
              <p class="mb-1">{{ comment.content }}</p>
              <small class="text-muted">{{ comment.createdAt|date('d M Y à H:i') }}</small>
            </div>
          </div>
        {% else %}
          <p class="text-center">Aucun commentaire pour ce post.</p>
        {% endfor %}
      </div>

      <!-- Formulaire d'ajout de commentaire -->
      <div class="modal-footer border-0 d-flex align-items-center">
        <img 
          src="{{ app.user.imageUrl 
                   ? asset(app.user.imageUrl) 
                   : asset('img/screen/user.png') }}" 
          alt="Votre avatar" 
          class="rounded-circle me-2" 
          style="width: 40px; height: 40px; object-fit: cover;"
        >
        <form 
        action="{{ path('app_comment_new', { postId: post.id }) }}" 
        method="POST" 
        class="modal-footer d-flex comment-form"
      >
        <input 
          type="text" 
          name="content"                   
          placeholder="Ajouter un commentaire..." 
          class="form-control me-2" 
          required
        >
        <button type="submit" class="btn btn-primary">
          Add new comment 
        </button>
      </form>
      
      </div>
    </div>
  </div>
</div>













              
              {% if post.user == app.user %}
  <a 
    href="{{ path('app_post_edit', { id: post.id }) }}" 
    class="btn btn-secondary"
  >Edit</a>




























  {% block javascripts %}
  {{ parent() }}


  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.comment-form').forEach(form => {
        // n’attacher le handler qu’une seule fois
        if (form.dataset.ajaxBound) return;
        form.dataset.ajaxBound = '1';
    
        form.addEventListener('submit', async e => {
          e.preventDefault();
    
          const url  = form.action;
          const data = new URLSearchParams(new FormData(form));
    
          try {
            const resp = await fetch(url, {
              method: 'POST',
              headers: { 'X-Requested-With': 'XMLHttpRequest' },
              body: data
            });
    
            if (!resp.ok) {
              // pour voir l’erreur renvoyée par Symfony
              const err = await resp.json().catch(() => null);
              throw new Error(err?.error || `HTTP ${resp.status}`);
            }
    
            const json = await resp.json();
            console.log('Nouveau commentaire reçu :', json);
    
            // 1) trouver le conteneur
            const container = form
              .closest('.modal-content')
              .querySelector('.modal-body');
    
            // 2) supprimer le message “Aucun commentaire”
            const emptyMsg = container.querySelector('p.text-center');
            if (emptyMsg) emptyMsg.remove();
    
            // 3) créer l’élément HTML du commentaire
            const div = document.createElement('div');
            div.className = 'd-flex align-items-start mb-3';
            div.innerHTML = `
              <img src="${json.user.avatar}"
                   alt="Avatar de ${json.user.nom}"
                   class="rounded-circle me-3"
                   style="width:40px;height:40px;object-fit:cover;">
              <div>
                <strong>${json.user.nom}</strong>
                <p class="mb-1">${json.content}</p>
                <small class="text-muted">${json.createdAt}</small>
              </div>
            `;
    
            // 4) l’ajouter à la fin *et* défiler jusqu’en bas pour le voir
            container.append(div);
            container.scrollTop = container.scrollHeight;
    
            // 5) vider et refocaliser le champ
            const input = form.querySelector('input[name="content"]');
            input.value = '';
            input.focus();
    
          } catch (err) {
            console.error('Erreur AJAX commentaire :', err);
            // ici vous pouvez afficher un toast ou un message d’erreur à l’utilisateur
          }
        });
      });
    });
    </script>
   
{% endblock %}
















 <!-- Bouton pour déclencher le modal -->
<button 
class="btn btn-danger ms-2" 
data-bs-toggle="modal" 
data-bs-target="#deleteModal{{ post.id }}"
>
Delete
</button>

<!-- Modal Bootstrap DELETe-->
<div 
  class="modal fade" 
  id="deleteModal{{ post.id }}" 
  tabindex="-1" 
  aria-labelledby="deleteModalLabel{{ post.id }}" 
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content text-center">
      
      <div class="modal-header justify-content-center border-0">
        <h5 class="modal-title w-100" id="deleteModalLabel{{ post.id }}">
          <i class="fas fa-trash-alt fa-3x text-danger"></i>
        </h5>
      </div>

      <div class="modal-body">
        <p class="mb-2">
          Es-tu sûr(e) de vouloir supprimer ce post :
        </p>
        <p><strong>{{ post.title }}</strong> ?</p>
      </div>

      <div class="modal-footer justify-content-center">
        <button 
          type="button" 
          class="btn btn-secondary" 
          data-bs-dismiss="modal"
        >
          Annuler
        </button>















        <form 
          method="post" 
          action="{{ path('app_post_delete', { id: post.id }) }}"
          class="d-inline"
        >
          <input 
            type="hidden" 
            name="_token" 
            value="{{ csrf_token('delete' ~ post.id) }}"
          >
          <button type="submit" class="btn btn-danger">
            Supprimer
          </button>
        </form>
      </div>
      
    </div>
  </div>
</div>











{% endif %}




            </div>
          </div>
        </div>
      </div>
    {% else %}
      <div class="col-12">
        <p class="text-center">Aucun post trouvé.</p>
      </div>
    {% endfor %}
  </div>
</div>


{% endblock %}
