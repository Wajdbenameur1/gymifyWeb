{% extends 'sportifdashboard/homepagesportif.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.ckeditor.com/4.21.0/standard/ckeditor.js"></script>
    <link rel="stylesheet" href="{{ asset('/css/PostStyle.css') }}" />

    <!-- Font Awesome 6 -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-R6HkF9T/5xk6slM7e4rWJZlGJrxO46hKBGG+1ZC43nlGQskM3Qj8Zc+V9OeGmFUyPNKO6kVoZ8iI2EN9MdXYUg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
{% endblock %}

{% block body %}
<div class="container-fluid mt-5 px-4">
    <h2 class="mb-4 post-title-animated">
        EDIT POST
    </h2>

    {{ form_start(form, {
        'action': path('app_post_edit', {'id': post.id}),
        'attr': {'data-parsley-validate': '', 'enctype': 'multipart/form-data'}
    }) }}

    <!-- Title -->
    <div class="mb-4">
        {{ form_label(form.title, 'Title <span class="text-danger">*</span>', {
            'label_attr': {'class': 'form-label'}, 'label_html': true
        }) }}
        {{ form_widget(form.title, {
            'attr': {
                'class': 'form-control',
                'data-parsley-trigger': 'keyup',
                'data-parsley-minlength': '3',
                'data-parsley-minlength-message': 'Le titre doit contenir au moins 3 caractères.'
            }
        }) }}
        <div class="text-danger">{{ form_errors(form.title) }}</div>
    </div>

    <!-- Main Row: Dropzone & URL | Editor -->
    <div class="row align-items-start">
        <!-- Left Column: Dropzone & URL -->
        <div class="col-lg-6">
            <div class="mb-4">
                <label class="form-label d-block">Image</label>
                <div id="dropzone" class="dropzone">
                    <!--i <class="fas fa-cloud-upload-alt fa-3x dropzone-icon" style="color: #74C0FC;"></i>-->
                </div>
            </div>
            <div class="mb-4">
                {{ form_label(form.webImage, 'Url', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.webImage, {'attr': {'class': 'form-control', 'placeholder': 'Choose url or drop file'}}) }}
                <div class="text-danger">{{ form_errors(form.webImage) }}</div>
            </div>
            <div style="display:none">{{ form_row(form.imageFile) }}</div>
        </div>

        <!-- Right Column: Editor -->
        <div class="col-lg-6">
            <div class="mb-4">
                {{ form_label(form.content, 'Content <span class="text-danger">*</span>', {
                    'label_attr': {'class': 'form-label'}, 'label_html': true
                }) }}
                {{ form_widget(form.content, {
                    'attr': {
                        'class': 'form-control',
                        'id': 'post_content',
                        'data-parsley-trigger': 'keyup',
                        'data-parsley-cleancontent': '',
                        'data-parsley-forbiddenwords': ''
                    }
                }) }}
                <div class="text-danger">{{ form_errors(form.content) }}</div>
            </div>
            <div class="d-flex align-items-center justify-content-between mb-4">
                <button type="button" id="speechToTextBtn" class="btn btn-warning speech-btn">
                    <i class="fas fa-microphone"></i> Try our ai speech to text
                </button>
            </div>
        </div>
    </div>

    <!-- Submit Button -->
    <div class="hstack gap-2 justify-content-center mb-3">
        <button class="btn btn-success">Update</button>
    </div>

    {{ form_end(form) }}
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.9.2/parsley.min.js" crossorigin="anonymous"></script>
    <script>
        Dropzone.autoDiscover = false;
        const myDropzone = new Dropzone("#dropzone", {
            url: "#",
            autoProcessQueue: false,
            clickable: "#dropzone",
            maxFiles: 1,
            acceptedFiles: 'image/*',
            addRemoveLinks: true,
        });

        const webImageInput = document.querySelector('input[name="post[webImage]"]');
        const fileInput = document.querySelector('input[name="post[imageFile]"]');
        const formElt = document.querySelector('form[data-parsley-validate]');
        const uploadIcon = document.querySelector('.dropzone-icon');



















  // Pré-charge l'image existante si locale ou URL passée du contrôleur
  const existingImage = {{ localImageUrl is defined ? '"' ~ localImageUrl ~ '"' : 'null' }};
  const existingName  = {{ oldFilename is defined ? '"' ~ oldFilename ~ '"' : '""' }};
  if(existingImage){
      const mockFile = { name: existingName, size: 0, accepted: true };
      myDropzone.emit('addedfile', mockFile);
      myDropzone.emit('thumbnail', mockFile, existingImage);
      myDropzone.emit('complete', mockFile);
      myDropzone.files.push(mockFile);
      webImageInput.readOnly = true;
      uploadIcon.style.display = 'none';
  }

  // CKEditor init
  const editor = CKEDITOR.replace('post_content',{ allowedContent:true, removePlugins:'elementspath', height:300,
      on:{ change(){ this.updateElement(); document.getElementById('post_content').dispatchEvent(new Event('input')); }}
  });





















// Parsley validators
        window.Parsley.addValidator('cleancontent', {
            validateString(value) {
                const text = editor.getData().replace(/<[^>]*>/g, ' ').replace(/\s+/g, ' ').trim();
                return text.length >= 10;
            },
            messages: { fr: 'Le contenu doit contenir au moins 10 caractères (sans HTML).' }
        });

        window.Parsley.addValidator('forbiddenwords', {
            validateString(value) {
                const text = editor.getData().replace(/<[^>]*>/g, ' ').toLowerCase();
                return !['spam','arnaque','insulte'].some(w => text.includes(w));
            },
            messages: { fr: 'Le contenu contient des mots interdits.' }
        });

// URL vs Dropzone
        webImageInput.addEventListener('input', function() {
            if (this.value.trim()) { myDropzone.removeAllFiles(true); myDropzone.disable(); }
            else myDropzone.enable();
        });

        myDropzone.on('addedfile', file => {
            if (webImageInput.value.trim()) { myDropzone.removeFile(file); alert('Vous avez déjà saisi une URL. Choisissez soit un fichier, soit une URL.'); return; }
            webImageInput.value = ''; webImageInput.readOnly = true;
            const dt = new DataTransfer(); dt.items.add(file); fileInput.files = dt.files;
            uploadIcon && (uploadIcon.style.display = 'none');
        });

        myDropzone.on('removedfile', () => {
            fileInput.value = ''; webImageInput.readOnly = false;
            uploadIcon && (uploadIcon.style.display = 'block');
        });
 // Soumission
        formElt.addEventListener('submit', e => {
            editor.updateElement();
            const text = editor.getData().replace(/<[^>]*>/g,' ').replace(/\s+/g,' ').trim();
            if (text.length < 10) { e.preventDefault(); document.getElementById('post_content').parsley().reset().validate(); return; }
            if (webImageInput.value.trim() && fileInput.files.length) { e.preventDefault(); alert('Veuillez choisir soit une URL, soit un fichier, pas les deux.'); }
        });
 // Focus CKEditor
        document.querySelector('.cke_chrome')?.addEventListener('focusin', e => {
            e.currentTarget.style.boxShadow = '0 0 5px rgba(0, 123, 255, 0.8)';
            e.currentTarget.style.borderColor = '#007bff';
        });
        document.querySelector('.cke_chrome')?.addEventListener('focusout', e => {
            e.currentTarget.style.boxShadow = 'none';
            e.currentTarget.style.borderColor = '#ced4da';
        });
    </script>
{% endblock %}